var MouseInput = pc.createScript("mouseInput");
MouseInput.attributes.add("orbitSensitivity", {
    type: "number",
    default: .3,
    title: "Orbit Sensitivity",
    description: "How fast the camera moves around the orbit. Higher is faster"
  }),
  MouseInput.attributes.add("distanceSensitivity", {
    type: "number",
    default: .15,
    title: "Distance Sensitivity",
    description: "How fast the camera moves in and out. Higher is faster"
  }),
  MouseInput.prototype.initialize = function() {
    if (this.orbitCamera = this.entity.script.orbitCamera,
      this.orbitCamera) {
      var t = this,
        o = function(o) {
          t.onMouseOut(o)
        };
      this.app.mouse.on(pc.EVENT_MOUSEDOWN, this.onMouseDown, this),
        this.app.mouse.on(pc.EVENT_MOUSEUP, this.onMouseUp, this),
        this.app.mouse.on(pc.EVENT_MOUSEMOVE, this.onMouseMove, this),
        this.app.mouse.on(pc.EVENT_MOUSEWHEEL, this.onMouseWheel, this),
        window.addEventListener("mouseout", o, !1),
        this.on("destroy", function() {
          this.app.mouse.off(pc.EVENT_MOUSEDOWN, this.onMouseDown, this),
            this.app.mouse.off(pc.EVENT_MOUSEUP, this.onMouseUp, this),
            this.app.mouse.off(pc.EVENT_MOUSEMOVE, this.onMouseMove, this),
            this.app.mouse.off(pc.EVENT_MOUSEWHEEL, this.onMouseWheel, this),
            window.removeEventListener("mouseout", o, !1)
        })
    }
    this.app.mouse.disableContextMenu(),
      this.lookButtonDown = !1,
      this.panButtonDown = !1,
      this.lastPoint = new pc.Vec2
  },
  MouseInput.fromWorldPoint = new pc.Vec3,
  MouseInput.toWorldPoint = new pc.Vec3,
  MouseInput.worldDiff = new pc.Vec3,
  MouseInput.prototype.pan = function(t) {
    var o = MouseInput.fromWorldPoint,
      e = MouseInput.toWorldPoint,
      i = MouseInput.worldDiff,
      s = this.entity.camera,
      n = this.orbitCamera.distance;
    s.screenToWorld(t.x, t.y, n, o),
      s.screenToWorld(this.lastPoint.x, this.lastPoint.y, n, e),
      i.sub2(e, o),
      this.orbitCamera.pivotPoint.add(i)
  },
  MouseInput.prototype.onMouseDown = function(t) {
    switch (t.button) {
      case pc.MOUSEBUTTON_LEFT:
        this.lookButtonDown = !0;
        break;
      case pc.MOUSEBUTTON_MIDDLE:
      case pc.MOUSEBUTTON_RIGHT:
        this.panButtonDown = !0
    }
  },
  MouseInput.prototype.onMouseUp = function(t) {
    switch (t.button) {
      case pc.MOUSEBUTTON_LEFT:
        this.lookButtonDown = !1;
        break;
      case pc.MOUSEBUTTON_MIDDLE:
      case pc.MOUSEBUTTON_RIGHT:
        this.panButtonDown = !1
    }
  },
  MouseInput.prototype.onMouseMove = function(t) {
    pc.app.mouse;
    this.lookButtonDown ? (this.orbitCamera.pitch -= t.dy * this.orbitSensitivity,
        this.orbitCamera.yaw -= t.dx * this.orbitSensitivity) : this.panButtonDown && this.pan(t),
      this.lastPoint.set(t.x, t.y)
  },
  MouseInput.prototype.onMouseWheel = function(t) {
    this.orbitCamera.distance -= t.wheel * this.distanceSensitivity * (.1 * this.orbitCamera.distance),
      t.event.preventDefault()
  },
  MouseInput.prototype.onMouseOut = function(t) {
    this.lookButtonDown = !1,
      this.panButtonDown = !1
  };
var KeyboardInput = pc.createScript("keyboardInput");
KeyboardInput.prototype.initialize = function() {
    this.orbitCamera = this.entity.script.orbitCamera,
      this.camera = this.entity,
      this.light = this.app.root.findByName("Light").light,
      this.app.on("Effects:setState", function(t) {
        this.camera.script.ermisEffectSAO.enabled = t,
          this.camera.script.ermisEffectGodrays.enabled = t,
          this.camera.script.ermisEffectDof.enabled = t,
          this.camera.script.fxaa.enabled = t,
          this.light.castShadows = t
      }, this)
  },
  KeyboardInput.prototype.postInitialize = function() {
    this.orbitCamera && (this.startDistance = this.orbitCamera.distance,
      this.startYaw = this.orbitCamera.yaw,
      this.startPitch = this.orbitCamera.pitch,
      this.startPivotPosition = this.orbitCamera.pivotPoint.clone())
  },
  KeyboardInput.prototype.update = function(t) {
    this.orbitCamera && this.app.keyboard.wasPressed(pc.KEY_SPACE) && (this.orbitCamera.reset(this.startYaw, this.startPitch, this.startDistance),
      this.orbitCamera.pivotPoint = this.startPivotPosition)
  };
var TouchInput = pc.createScript("touchInput");
TouchInput.attributes.add("orbitSensitivity", {
    type: "number",
    default: .4,
    title: "Orbit Sensitivity",
    description: "How fast the camera moves around the orbit. Higher is faster"
  }),
  TouchInput.attributes.add("distanceSensitivity", {
    type: "number",
    default: .2,
    title: "Distance Sensitivity",
    description: "How fast the camera moves in and out. Higher is faster"
  }),
  TouchInput.prototype.initialize = function() {
    this.orbitCamera = this.entity.script.orbitCamera,
      this.lastTouchPoint = new pc.Vec2,
      this.lastPinchMidPoint = new pc.Vec2,
      this.lastPinchDistance = 0,
      this.effectsTimeout = void 0,
      this.orbitCamera && this.app.touch && (this.app.touch.on(pc.EVENT_TOUCHSTART, this.onTouchStartEndCancel, this),
        this.app.touch.on(pc.EVENT_TOUCHEND, this.onTouchStartEndCancel, this),
        this.app.touch.on(pc.EVENT_TOUCHCANCEL, this.onTouchStartEndCancel, this),
        this.app.touch.on(pc.EVENT_TOUCHMOVE, this.onTouchMove, this),
        this.on("destroy", function() {
          this.app.touch.off(pc.EVENT_TOUCHSTART, this.onTouchStartEndCancel, this),
            this.app.touch.off(pc.EVENT_TOUCHEND, this.onTouchStartEndCancel, this),
            this.app.touch.off(pc.EVENT_TOUCHCANCEL, this.onTouchStartEndCancel, this),
            this.app.touch.off(pc.EVENT_TOUCHMOVE, this.onTouchMove, this)
        }))
  },
  TouchInput.prototype.getPinchDistance = function(t, i) {
    var o = t.x - i.x,
      n = t.y - i.y;
    return Math.sqrt(o * o + n * n)
  },
  TouchInput.prototype.calcMidPoint = function(t, i, o) {
    o.set(i.x - t.x, i.y - t.y),
      o.scale(.5),
      o.x += t.x,
      o.y += t.y
  },
  TouchInput.prototype.onTouchStartEndCancel = function(t) {
    var i = t.touches;
    1 == i.length ? this.lastTouchPoint.set(i[0].x, i[0].y) : 2 == i.length && (this.lastPinchDistance = this.getPinchDistance(i[0], i[1]),
      this.calcMidPoint(i[0], i[1], this.lastPinchMidPoint))
  },
  TouchInput.fromWorldPoint = new pc.Vec3,
  TouchInput.toWorldPoint = new pc.Vec3,
  TouchInput.worldDiff = new pc.Vec3,
  TouchInput.prototype.pan = function(t) {
    var i = TouchInput.fromWorldPoint,
      o = TouchInput.toWorldPoint,
      n = TouchInput.worldDiff,
      h = this.entity.camera,
      c = this.orbitCamera.distance;
    h.screenToWorld(t.x, t.y, c, i),
      h.screenToWorld(this.lastPinchMidPoint.x, this.lastPinchMidPoint.y, c, o),
      n.sub2(o, i),
      this.orbitCamera.pivotPoint.add(n)
  },
  TouchInput.pinchMidPoint = new pc.Vec2,
  TouchInput.prototype.onTouchMove = function(t) {
    var i = t.touches,
      o = TouchInput.pinchMidPoint;
    if (1 == i.length) {
      var n = i[0];
      this.orbitCamera.pitch -= (n.y - this.lastTouchPoint.y) * this.orbitSensitivity,
        this.orbitCamera.yaw -= (n.x - this.lastTouchPoint.x) * this.orbitSensitivity,
        this.lastTouchPoint.set(n.x, n.y)
    } else if (2 == i.length) {
      var h = this.getPinchDistance(i[0], i[1]),
        c = h - this.lastPinchDistance;
      this.lastPinchDistance = h,
        this.orbitCamera.distance -= c * this.distanceSensitivity * .1 * (.1 * this.orbitCamera.distance),
        this.calcMidPoint(i[0], i[1], o),
        this.lastPinchMidPoint.copy(o)
    }
  };
var OrbitCamera = pc.createScript("orbitCamera");
OrbitCamera.attributes.add("distanceMax", {
    type: "number",
    default: 0,
    title: "Distance Max",
    description: "Setting this at 0 will give an infinite distance limit"
  }),
  OrbitCamera.attributes.add("distanceMin", {
    type: "number",
    default: 0,
    title: "Distance Min"
  }),
  OrbitCamera.attributes.add("pitchAngleMax", {
    type: "number",
    default: 90,
    title: "Pitch Angle Max (degrees)"
  }),
  OrbitCamera.attributes.add("pitchAngleMin", {
    type: "number",
    default: -90,
    title: "Pitch Angle Min (degrees)"
  }),
  OrbitCamera.attributes.add("inertiaFactor", {
    type: "number",
    default: 0,
    title: "Inertia Factor",
    description: "Higher value means that the camera will continue moving after the user has stopped dragging. 0 is fully responsive."
  }),
  OrbitCamera.attributes.add("focusEntity", {
    type: "entity",
    title: "Focus Entity",
    description: "Entity for the camera to focus on. If blank, then the camera will use the whole scene"
  }),
  OrbitCamera.attributes.add("frameOnStart", {
    type: "boolean",
    default: !0,
    title: "Frame on Start",
    description: 'Frames the entity or scene at the start of the application."'
  }),
  Object.defineProperty(OrbitCamera.prototype, "distance", {
    get: function() {
      return this._targetDistance
    },
    set: function(t) {
      this._targetDistance = this._clampDistance(t)
    }
  }),
  Object.defineProperty(OrbitCamera.prototype, "pitch", {
    get: function() {
      return this._targetPitch
    },
    set: function(t) {
      this._targetPitch = this._clampPitchAngle(t)
    }
  }),
  Object.defineProperty(OrbitCamera.prototype, "yaw", {
    get: function() {
      return this._targetYaw
    },
    set: function(t) {
      this._targetYaw = t;
      var i = (this._targetYaw - this._yaw) % 360;
      this._targetYaw = i > 180 ? this._yaw - (360 - i) : i < -180 ? this._yaw + (360 + i) : this._yaw + i
    }
  }),
  Object.defineProperty(OrbitCamera.prototype, "pivotPoint", {
    get: function() {
      return this._pivotPoint
    },
    set: function(t) {
      this._pivotPoint.copy(t)
    }
  }),
  OrbitCamera.prototype.focus = function(t) {
    this._buildAabb(t, 0);
    var i = this._modelsAabb.halfExtents,
      e = Math.max(i.x, Math.max(i.y, i.z));
    e /= Math.tan(.5 * this.entity.camera.fov * pc.math.DEG_TO_RAD),
      e *= 2,
      this.distance = e,
      this._removeInertia(),
      this._pivotPoint.copy(this._modelsAabb.center)
  },
  OrbitCamera.distanceBetween = new pc.Vec3,
  OrbitCamera.prototype.resetAndLookAtPoint = function(t, i) {
    this.pivotPoint.copy(i),
      this.entity.setPosition(t),
      this.entity.lookAt(i);
    var e = OrbitCamera.distanceBetween;
    e.sub2(i, t),
      this.distance = e.length(),
      this.pivotPoint.copy(i);
    var a = this.entity.getRotation();
    this.yaw = this._calcYaw(a),
      this.pitch = this._calcPitch(a, this.yaw),
      this._removeInertia(),
      this._updatePosition()
  },
  OrbitCamera.prototype.resetAndLookAtEntity = function(t, i) {
    this._buildAabb(i, 0),
      this.resetAndLookAtPoint(t, this._modelsAabb.center)
  },
  OrbitCamera.prototype.reset = function(t, i, e) {
    this.pitch = i,
      this.yaw = t,
      this.distance = e,
      this._removeInertia()
  },
  OrbitCamera.prototype.initialize = function() {
    var t = this,
      i = function() {
        t._checkAspectRatio()
      };
    window.addEventListener("resize", i, !1),
      this._checkAspectRatio(),
      this._modelsAabb = new pc.BoundingBox,
      this._buildAabb(this.focusEntity || this.app.root, 0),
      this.entity.lookAt(this._modelsAabb.center),
      this._pivotPoint = new pc.Vec3,
      this._pivotPoint.copy(this._modelsAabb.center);
    var e = this.entity.getRotation();
    if (this._yaw = this._calcYaw(e),
      this._pitch = this._clampPitchAngle(this._calcPitch(e, this._yaw)),
      this.entity.setLocalEulerAngles(this._pitch, this._yaw, 0),
      this._distance = 0,
      this._targetYaw = this._yaw,
      this._targetPitch = this._pitch,
      this.frameOnStart)
      this.focus(this.focusEntity || this.app.root);
    else {
      var a = new pc.Vec3;
      a.sub2(this.entity.getPosition(), this._pivotPoint),
        this._distance = this._clampDistance(a.length())
    }
    this._targetDistance = this._distance,
      this.on("attr:distanceMin", function(t, i) {
        this._targetDistance = this._clampDistance(this._distance)
      }),
      this.on("attr:distanceMax", function(t, i) {
        this._targetDistance = this._clampDistance(this._distance)
      }),
      this.on("attr:pitchAngleMin", function(t, i) {
        this._targetPitch = this._clampPitchAngle(this._pitch)
      }),
      this.on("attr:pitchAngleMax", function(t, i) {
        this._targetPitch = this._clampPitchAngle(this._pitch)
      }),
      this.on("attr:focusEntity", function(t, i) {
        this.frameOnStart ? this.focus(t || this.app.root) : this.resetAndLookAtEntity(this.entity.getPosition(), t || this.app.root)
      }),
      this.on("attr:frameOnStart", function(t, i) {
        t && this.focus(this.focusEntity || this.app.root)
      }),
      this.on("destroy", function() {
        window.removeEventListener("resize", i, !1)
      })
  },
  OrbitCamera.prototype.update = function(t) {
    var i = 0 === this.inertiaFactor ? 1 : Math.min(t / this.inertiaFactor, 1);
    this._distance = pc.math.lerp(this._distance, this._targetDistance, i),
      this._yaw = pc.math.lerp(this._yaw, this._targetYaw, i),
      this._pitch = pc.math.lerp(this._pitch, this._targetPitch, i),
      this._updatePosition()
  },
  OrbitCamera.prototype._updatePosition = function() {
    this.entity.setLocalPosition(0, 0, 0),
      this.entity.setLocalEulerAngles(this._pitch, this._yaw, 0);
    var t = this.entity.getPosition();
    t.copy(this.entity.forward),
      t.scale(-this._distance),
      t.add(this.pivotPoint),
      this.entity.setPosition(t)
  },
  OrbitCamera.prototype._removeInertia = function() {
    this._yaw = this._targetYaw,
      this._pitch = this._targetPitch,
      this._distance = this._targetDistance
  },
  OrbitCamera.prototype._checkAspectRatio = function() {
    var t = this.app.graphicsDevice.height,
      i = this.app.graphicsDevice.width;
    this.entity.camera.horizontalFov = t > i
  },
  OrbitCamera.prototype._buildAabb = function(t, i) {
    var e = 0;
    if (t.model) {
      var a = t.model.meshInstances;
      for (e = 0; e < a.length; e++)
        0 === i ? this._modelsAabb.copy(a[e].aabb) : this._modelsAabb.add(a[e].aabb),
        i += 1
    }
    for (e = 0; e < t.children.length; ++e)
      i += this._buildAabb(t.children[e], i);
    return i
  },
  OrbitCamera.prototype._calcYaw = function(t) {
    var i = new pc.Vec3;
    return t.transformVector(pc.Vec3.FORWARD, i),
      Math.atan2(-i.x, -i.z) * pc.math.RAD_TO_DEG
  },
  OrbitCamera.prototype._clampDistance = function(t) {
    return this.distanceMax > 0 ? pc.math.clamp(t, this.distanceMin, this.distanceMax) : Math.max(t, this.distanceMin)
  },
  OrbitCamera.prototype._clampPitchAngle = function(t) {
    return pc.math.clamp(t, -this.pitchAngleMax, -this.pitchAngleMin)
  },
  OrbitCamera.quatWithoutYaw = new pc.Quat,
  OrbitCamera.yawOffset = new pc.Quat,
  OrbitCamera.prototype._calcPitch = function(t, i) {
    var e = OrbitCamera.quatWithoutYaw,
      a = OrbitCamera.yawOffset;
    a.setFromEulerAngles(0, -i, 0),
      e.mul2(a, t);
    var s = new pc.Vec3;
    return e.transformVector(pc.Vec3.FORWARD, s),
      Math.atan2(s.y, -s.z) * pc.math.RAD_TO_DEG
  };
var BtnStates = pc.createScript("btnStates");
BtnStates.attributes.add("hoverAsset", {
    type: "asset",
    assetType: "texture"
  }),
  BtnStates.attributes.add("activeAsset", {
    type: "asset",
    assetType: "texture"
  }),
  BtnStates.prototype.initialize = function() {
    this.originalTexture = this.entity.element.textureAsset,
      this.hovered = !1,
      this.camera = this.app.root.findByName("Camera"),
      this.app.touch ? (this.entity.element.on("touchstart", this.onPress, this),
        this.entity.element.on("touchend", this.onRelease, this)) : (this.entity.element.on("mouseenter", this.onEnter, this),
        this.entity.element.on("mousedown", this.onPress, this),
        this.entity.element.on("mouseup", this.onRelease, this),
        this.entity.element.on("mouseleave", this.onLeave, this))
  },
  BtnStates.prototype.onEnter = function(t) {
    this.hovered = !0,
      t.element.textureAsset = this.hoverAsset,
      document.body.style.cursor = "pointer"
  },
  BtnStates.prototype.onLeave = function(t) {
    this.hovered = !1,
      t.element.textureAsset = this.originalTexture,
      document.body.style.cursor = "default"
  },
  BtnStates.prototype.onPress = function(t) {
    t.element.textureAsset = this.activeAsset
  },
  BtnStates.prototype.onRelease = function(t) {
    t.element.textureAsset = this.hovered ? this.hoverAsset : this.originalTexture,
      this.entity.tags.has("button-dimensions") && this.dimensionsButtonPressed()
  },
  BtnStates.prototype.dimensionsButtonPressed = function() {
    this.app.root.findByTag("dims").forEach(function(t) {
      t.enabled = !t.enabled
    })
  };
var DimDraw = pc.createScript("dimDraw");
DimDraw.attributes.add("lineTitle", {
    type: "string",
    default: "",
    title: "Title"
  }),
  DimDraw.attributes.add("point1", {
    type: "vec3",
    title: "Point 1"
  }),
  DimDraw.attributes.add("point2", {
    type: "vec3",
    title: "Point 2"
  }),
  DimDraw.attributes.add("lineNumberText", {
    type: "entity",
    title: "Line Number"
  }),
  DimDraw.attributes.add("lineTitleText", {
    type: "entity",
    title: "Line Title"
  }),
  DimDraw.attributes.add("lineLeftArrow", {
    type: "entity",
    title: "Left Arrow"
  }),
  DimDraw.attributes.add("lineRightArrow", {
    type: "entity",
    title: "Right Arrow"
  }),
  DimDraw.attributes.add("lineMaterial", {
    type: "asset",
    assetType: "material",
    title: "Line material"
  }),
  DimDraw.attributes.add("lineOffsetMat", {
    type: "asset",
    assetType: "material",
    title: "Line Offset Mat"
  }),
  DimDraw.attributes.add("distance", {
    type: "number",
    title: "distance",
    description: "The distance to draw on the dimension text."
  }),
  DimDraw.attributes.add("precision", {
    type: "number",
    default: 2,
    title: "Precision",
    description: "Number of decimal digits rendered in text."
  }),
  DimDraw.attributes.add("offsetDistance", {
    type: "number",
    default: 0,
    title: "Offset Distance",
    description: "The offset distance from the points axis where the dimension line will be drawn."
  }),
  DimDraw.attributes.add("offsetAxis", {
    type: "string",
    default: "x",
    enum: [{
      x: "x"
    }, {
      y: "y"
    }, {
      z: "z"
    }],
    title: "Offset Axis"
  }),
  DimDraw.attributes.add("thickness", {
    type: "number",
    default: .005,
    title: "Thickness",
    description: "The rendered line thickness in world units."
  }),
  DimDraw.attributes.add("cameraEntity", {
    type: "entity",
    title: "Camera",
    description: "Reference a camera entity to have all text automatically face the camera."
  }),
  DimDraw.prototype.initialize = function() {
    this.pos = new pc.Vec3,
      this.dir = new pc.Vec3,
      this.vec = new pc.Vec3,
      this.q = new pc.Quat,
      this.lookAts = [],
      this.leftOffsetPos = new pc.Vec3,
      this.rightOffsetPos = new pc.Vec3,
      this.createModels(),
      this.on("destroy", function() {
        this.lineLeft && this.lineLeft.destroy(),
          this.lineRight && this.lineRight.destroy(),
          this.lineLeftOffset && this.lineLeftOffset.destroy(),
          this.lineRightOffset && this.lineRightOffset.destroy()
      })
  },
  DimDraw.prototype.createModels = function() {
    this.numberText = this.createLineText(this.lineNumberText, this.point1, this.point2, !0, !0),
      this.numberText.element.text = this.numberText.element.text.replace("%number%", this.distance.toFixed(this.precision));
    var t = 1.2 * this.getBoundingMaxSide(this.numberText.element._addedModels[0].meshInstances[0]);
    this.titleText = this.createLineText(this.lineTitleText, this.point1, this.point2, !0, !1),
      this.titleText.element.text = this.lineTitle;
    var e = .01 * this.lineTitleText.element.lineHeight;
    this.titleText.translate(0, -e, 0),
      this.lineLeft = this.createLineSegment("lineLeft", 0, .5, this.point1, this.point2, t, !0, this.lineMaterial.resource, this.lineLeftArrow),
      this.lineRight = this.createLineSegment("lineRight", 0, .5, this.point2, this.point1, t, !0, this.lineMaterial.resource, this.lineRightArrow),
      0 !== this.offsetDistance && (this.lineLeftOffset = this.createLineSegment("lineLeftOffset", 0, .95, this.point1, this.leftOffsetPos, 0, !1, this.lineOffsetMat.resource),
        this.lineRightOffset = this.createLineSegment("lineRightOffset", 0, .95, this.point2, this.rightOffsetPos, 0, !1, this.lineOffsetMat.resource))
  },
  DimDraw.prototype.getBoundingMaxSide = function(t) {
    var e = t.aabb,
      i = 0;
    for (var s in e.halfExtents)
      e.halfExtents[s] > i && (i = 2 * e.halfExtents[s]);
    return i
  },
  DimDraw.prototype.getBoundingSide = function(t, e) {
    return t.aabb.halfExtents[e]
  },
  DimDraw.prototype.createLineSegment = function(t, e, i, s, n, a, r, o, h) {
    this.pos.copy(s);
    var l = (this.pos.distance(n) - a) * (e + i);
    this.dir.copy(s),
      this.dir.sub(n),
      this.dir.normalize();
    var d = new pc.Entity(t);
    d.addComponent("model", {
        type: "cylinder",
        material: o,
        castShadows: !1,
        receiveShadows: !1
      }),
      this.entity.addChild(d);
    var c = 0;
    h && (0 !== h.findByName("Model").getLocalPosition().y && (c = this.getBoundingMaxSide(h.findByName("Model").model.meshInstances[0])));
    var f = l / 2 + l * e + c;
    this.pos.copy(s),
      this.pos.add(this.dir.clone().scale(-f)),
      d.setPosition(this.pos),
      d.lookAt(n);
    var p = d.getEulerAngles();
    if (this.q.setFromEulerAngles(p.x + 90, p.y, p.z),
      d.setRotation(this.q),
      d.setLocalScale(this.thickness, l, this.thickness),
      r && 0 !== this.offsetDistance && (this.pos.set(0, 0, 0),
        this.pos[this.offsetAxis] += this.offsetDistance,
        d.translate(this.pos)),
      h) {
      var m = h.clone();
      this.entity.addChild(m),
        m.setPosition(s),
        m.lookAt(n),
        m.rotateLocal(90, 0, 0),
        this.pos.copy(d.getPosition()),
        this.pos.add(this.dir.scale(f)),
        m.setPosition(this.pos),
        "lineLeft" === t && this.leftOffsetPos.copy(this.pos),
        "lineRight" === t && this.rightOffsetPos.copy(this.pos)
    }
    return d
  },
  DimDraw.prototype.createLineText = function(t, e, i, s, n) {
    if (t) {
      this.pos.copy(e),
        this.pos.add(i),
        this.pos.scale(.5);
      var a = t.clone();
      if (this.entity.addChild(a),
        a.setPosition(this.pos),
        s && 0 !== this.offsetDistance && (this.pos.set(0, 0, 0),
          this.pos[this.offsetAxis] += this.offsetDistance,
          a.translate(this.pos)),
        this.cameraEntity)
        n ? this.lookAts.push(a) : (a.reparent(this.numberText),
          a.setLocalScale(1, 1, 1));
      else if ("Line Number" === a.name) {
        this.dir.copy(e),
          this.dir.sub(i),
          this.dir.normalize();
        var r = this.dir.dot(a.forward),
          o = Math.acos(r) * pc.math.RAD_TO_DEG;
        a.rotate(0, o - 90, 0)
      } else
        a.setLocalEulerAngles(this.numberText.getLocalEulerAngles());
      return a
    }
  },
  DimDraw.prototype.update = function(t) {
    if (this.cameraEntity) {
      var e = this.cameraEntity.getPosition();
      this.lookAts.forEach(function(t) {
          t.lookAt(e),
            t.rotateLocal(0, 180, 0)
        }
        .bind(this))
    }
  };
var DimBounding = pc.createScript("dimBounding");
DimBounding.attributes.add("modelEntity", {
    type: "entity",
    title: "Model Entity"
  }),
  DimBounding.attributes.add("lineNumberText", {
    type: "entity",
    title: "Line Number"
  }),
  DimBounding.attributes.add("lineTitleText", {
    type: "entity",
    title: "Line Title"
  }),
  DimBounding.attributes.add("lineLeftArrow", {
    type: "entity",
    title: "Left Arrow"
  }),
  DimBounding.attributes.add("lineRightArrow", {
    type: "entity",
    title: "Right Arrow"
  }),
  DimBounding.attributes.add("lineMaterial", {
    type: "asset",
    assetType: "material",
    title: "Line Material"
  }),
  DimBounding.attributes.add("lineOffsetMat", {
    type: "asset",
    assetType: "material",
    title: "Line Offset Mat"
  }),
  DimBounding.attributes.add("overrideDistance", {
    type: "number",
    title: "Override Distance",
    description: "Instead of having the script calculate the distance automatically, you can override that by typing a number here."
  }),
  DimBounding.attributes.add("precision", {
    type: "number",
    default: 2,
    title: "Precision",
    description: "Number of decimal digits rendered in text."
  }),
  DimBounding.attributes.add("offsetDistance", {
    type: "number",
    default: 0,
    title: "Offset Distance",
    description: "The offset distance from the points axis where the dimension line will be drawn."
  }),
  DimBounding.attributes.add("thickness", {
    type: "number",
    default: .02,
    title: "Thickness",
    description: "The rendered line thickness in world units."
  }),
  DimBounding.attributes.add("cameraEntity", {
    type: "entity",
    title: "Camera",
    description: "Reference a camera entity to have all text automatically face the camera."
  }),
  DimBounding.prototype.initialize = function() {
    !0 !== this.initialized && (this.initialized = void 0,
      this.bounding = void 0,
      this.distance = void 0,
      this.startPos = void 0,
      this.endPos = void 0,
      this.prepare(),
      this.calcBoundingLines(),
      this.initialized = !0)
  },
  DimBounding.prototype.prepare = function() {
    this.bounding = new pc.BoundingBox,
      this.startPos = new pc.Vec3,
      this.endPos = new pc.Vec3
  },
  DimBounding.prototype.calculateAabb = function(t, i) {
    var e = 0;
    if (t.model) {
      var n = t.model.meshInstances;
      for (e = 0; e < n.length; e++)
        0 === i ? this.bounding.copy(n[e].aabb) : this.bounding.add(n[e].aabb),
        i += 1
    }
    for (e = 0; e < t.children.length; ++e)
      i += this.calculateAabb(t.children[e], i);
    return i
  },
  DimBounding.prototype.calcBoundingLines = function() {
    if (this.modelEntity) {
      this.startPos.copy(this.modelEntity.getPosition()),
        this.modelEntity.setPosition(0, 0, 0),
        this.calculateAabb(this.modelEntity),
        this.modelEntity.setPosition(this.startPos),
        this.bounding.center.add(this.startPos);
      var t = ["x", "y", "z"],
        i = {
          x: "Length",
          y: "Height",
          z: "Width"
        },
        e = {
          x: -1,
          y: -1,
          z: -1
        },
        n = {
          x: "z",
          y: "z",
          z: "x"
        };
      t.forEach(function(s) {
          this.startPos.copy(this.bounding.center),
            t.forEach(function(t) {
                if (s === t)
                  return !0;
                var i = 1;
                "y" === t && (i = -1),
                  this.startPos[t] += i * e[t] * this.bounding.halfExtents[t]
              }
              .bind(this));
          var a = this.bounding.halfExtents[s];
          this.endPos.copy(this.startPos);
          var o = 1;
          "z" === s && (o = -1),
            this.startPos[s] += o * a,
            this.endPos[s] -= o * a,
            this.calcLine(this.startPos, this.endPos, i[s], this.offsetDistance * e[s], n[s])
        }
        .bind(this))
    }
  },
  DimBounding.prototype.calcLine = function(t, i, e, n, s) {
    if (t && i) {
      this.startPos.copy(t),
        this.endPos.copy(i),
        this.distance = this.overrideDistance > 0 ? this.overrideDistance : this.startPos.distance(this.endPos);
      var a = new pc.Entity(e);
      this.entity.addChild(a),
        a.addComponent("script"),
        a.script.create("dimDraw", {
          attributes: {
            lineTitle: e,
            lineNumberText: this.lineNumberText,
            lineTitleText: this.lineTitleText,
            lineLeftArrow: this.lineLeftArrow,
            lineRightArrow: this.lineRightArrow,
            lineMaterial: this.lineMaterial,
            lineOffsetMat: this.lineOffsetMat,
            point1: this.startPos,
            point2: this.endPos,
            distance: this.distance,
            offsetDistance: n,
            precision: this.precision,
            offsetAxis: s,
            thickness: this.thickness,
            cameraEntity: this.cameraEntity
          }
        })
    }
  };
var DimPoints = pc.createScript("dimPoints");
DimPoints.attributes.add("lineTitle", {
    type: "string",
    default: "",
    title: "Title"
  }),
  DimPoints.attributes.add("point1", {
    type: "entity",
    title: "Point 1"
  }),
  DimPoints.attributes.add("point2", {
    type: "entity",
    title: "Point 2"
  }),
  DimPoints.attributes.add("lineNumberText", {
    type: "entity",
    title: "Line Number"
  }),
  DimPoints.attributes.add("lineTitleText", {
    type: "entity",
    title: "Line Title"
  }),
  DimPoints.attributes.add("lineLeftArrow", {
    type: "entity",
    title: "Left Arrow"
  }),
  DimPoints.attributes.add("lineRightArrow", {
    type: "entity",
    title: "Right Arrow"
  }),
  DimPoints.attributes.add("lineMaterial", {
    type: "asset",
    assetType: "material",
    title: "Line Material"
  }),
  DimPoints.attributes.add("lineOffsetMat", {
    type: "asset",
    assetType: "material",
    title: "Line Offset Mat"
  }),
  DimPoints.attributes.add("overrideDistance", {
    type: "number",
    title: "Override Distance",
    description: "Instead of having the script calculate the distance automatically, you can override that by typing a number here."
  }),
  DimPoints.attributes.add("precision", {
    type: "number",
    default: 2,
    title: "Precision",
    description: "Number of decimal digits rendered in text."
  }),
  DimPoints.attributes.add("offsetDistance", {
    type: "number",
    default: 0,
    title: "Offset Distance",
    description: "The offset distance from the points axis where the dimension line will be drawn."
  }),
  DimPoints.attributes.add("offsetAxis", {
    type: "string",
    default: "x",
    enum: [{
      x: "x"
    }, {
      y: "y"
    }, {
      z: "z"
    }],
    title: "Offset Axis"
  }),
  DimPoints.attributes.add("thickness", {
    type: "number",
    default: .005,
    title: "Thickness",
    description: "The rendered line thickness in world units."
  }),
  DimPoints.attributes.add("cameraEntity", {
    type: "entity",
    title: "Camera",
    description: "Reference a camera entity to have all text automatically face the camera."
  }),
  DimPoints.prototype.initialize = function() {
    !0 !== this.initialized && (this.initialized = void 0,
      this.distance = void 0,
      this.startPos = void 0,
      this.endPos = void 0,
      this.prepare(),
      this.calcLine(this.point1.getPosition(), this.point2.getPosition()),
      this.initialized = !0)
  },
  DimPoints.prototype.prepare = function() {
    this.startPos = new pc.Vec3,
      this.endPos = new pc.Vec3
  },
  DimPoints.prototype.calcLine = function(t, i) {
    t && i && (this.startPos.copy(t),
      this.endPos.copy(i),
      this.distance = this.overrideDistance > 0 ? this.overrideDistance : this.startPos.distance(this.endPos),
      this.entity.script.dimDraw && this.entity.script.destroy("dimDraw"),
      this.entity.script.create("dimDraw", {
        attributes: {
          lineTitle: this.lineTitle,
          lineNumberText: this.lineNumberText,
          lineTitleText: this.lineTitleText,
          lineLeftArrow: this.lineLeftArrow,
          lineRightArrow: this.lineRightArrow,
          lineMaterial: this.lineMaterial,
          lineOffsetMat: this.lineOffsetMat,
          point1: this.startPos,
          point2: this.endPos,
          distance: this.distance,
          offsetDistance: this.offsetDistance,
          precision: this.precision,
          offsetAxis: this.offsetAxis,
          thickness: this.thickness,
          cameraEntity: this.cameraEntity
        }
      }))
  };
! function(Q) {
  var U = {};

  function __webpack_require__(e) {
    if (U[e])
      return U[e].exports;
    var F = U[e] = {
      i: e,
      l: !1,
      exports: {}
    };
    return Q[e].call(F.exports, F, F.exports, __webpack_require__),
      F.l = !0,
      F.exports
  }
  __webpack_require__.m = Q,
    __webpack_require__.c = U,
    __webpack_require__.d = function(Q, U, e) {
      __webpack_require__.o(Q, U) || Object.defineProperty(Q, U, {
        enumerable: !0,
        get: e
      })
    },
    __webpack_require__.r = function(Q) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(Q, Symbol.toStringTag, {
          value: "Module"
        }),
        Object.defineProperty(Q, "__esModule", {
          value: !0
        })
    },
    __webpack_require__.t = function(Q, U) {
      if (1 & U && (Q = __webpack_require__(Q)),
        8 & U)
        return Q;
      if (4 & U && "object" == typeof Q && Q && Q.__esModule)
        return Q;
      var e = Object.create(null);
      if (__webpack_require__.r(e),
        Object.defineProperty(e, "default", {
          enumerable: !0,
          value: Q
        }),
        2 & U && "string" != typeof Q)
        for (var F in Q)
          __webpack_require__.d(e, F, function(U) {
              return Q[U]
            }
            .bind(null, F));
      return e
    },
    __webpack_require__.n = function(Q) {
      var U = Q && Q.__esModule ? function getDefault() {
          return Q.default
        } :
        function getModuleExports() {
          return Q
        };
      return __webpack_require__.d(U, "a", U),
        U
    },
    __webpack_require__.o = function(Q, U) {
      return Object.prototype.hasOwnProperty.call(Q, U)
    },
    __webpack_require__.p = "",
    __webpack_require__(__webpack_require__.s = "./src/index.ts")
}({
  "./src/core/ermis-effect.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar ShaderDataTypes;\r\n(function (ShaderDataTypes) {\r\n    ShaderDataTypes["float"] = "float";\r\n    ShaderDataTypes["vec2"] = "vec2";\r\n    ShaderDataTypes["vec3"] = "vec3";\r\n    ShaderDataTypes["vec4"] = "vec4";\r\n    ShaderDataTypes["sampler2D"] = "sampler2D";\r\n})(ShaderDataTypes = exports.ShaderDataTypes || (exports.ShaderDataTypes = {}));\r\nclass ErmisEffect {\r\n    constructor(name, settings) {\r\n        this.name = name;\r\n        this.settings = settings;\r\n        this.canChain = true;\r\n        this.passes = [];\r\n    }\r\n    onEnable(app) { }\r\n    onDisable(app) { }\r\n    static getUniformValue(effectUniform, app, camera) {\r\n        const value = effectUniform.value !== undefined\r\n            ? effectUniform.value\r\n            : effectUniform.default;\r\n        if (effectUniform.calcValue !== undefined) {\r\n            return effectUniform.calcValue(value, app, camera);\r\n        }\r\n        else {\r\n            return value !== undefined ? value : undefined;\r\n        }\r\n    }\r\n    static getDefinesFromUniforms(effectUniforms) {\r\n        return effectUniforms.filter((uniform) => {\r\n            return uniform.define === true;\r\n        });\r\n    }\r\n    static uniformsToString(effectUniforms) {\r\n        let str = "";\r\n        for (const effectUniform of effectUniforms) {\r\n            if (!effectUniform.type)\r\n                continue;\r\n            const type = "uniform";\r\n            str += `${type} ${effectUniform.type} ${effectUniform.name};\\n`;\r\n        }\r\n        return str;\r\n    }\r\n    static definesToString(effectDefines) {\r\n        let str = "";\r\n        for (const effectDefine of effectDefines) {\r\n            const type = "#define";\r\n            const value = ErmisEffect.getUniformValue(effectDefine);\r\n            str += `${type} ${effectDefine.name.toUpperCase()} ${value}\\n`;\r\n        }\r\n        return str;\r\n    }\r\n}\r\nexports.ErmisEffect = ErmisEffect;\r\nclass ErmisEffectSettings {\r\n    constructor(effectID, effectUniforms) {\r\n        this.effectID = effectID;\r\n        this.effectUniforms = effectUniforms;\r\n        // --- execute\r\n        this.createPcScript();\r\n    }\r\n    createPcScript() {\r\n        const script = pc.createScript(`ermis${this.effectID}Settings`);\r\n        // --- dynamically create editor attributes based on effect uniforms\r\n        for (const effectUniform of this.effectUniforms) {\r\n            if (effectUniform.inEditor === false)\r\n                continue;\r\n            const def = {\r\n                type: effectUniform.pcType,\r\n                title: effectUniform.title,\r\n                default: effectUniform.default,\r\n                description: effectUniform.description,\r\n                min: effectUniform.min,\r\n                max: effectUniform.max,\r\n                precision: effectUniform.precision\r\n            };\r\n            if (effectUniform.enum)\r\n                def.enum = effectUniform.enum;\r\n            if (effectUniform.define) {\r\n                if (!def.description)\r\n                    def.description = "";\r\n                def.description +=\r\n                    " This property requires reloading the effect to render the new value.";\r\n            }\r\n            if (def.description) {\r\n                def.description = def.description.trim();\r\n            }\r\n            script.attributes.add(effectUniform.name, def);\r\n        }\r\n        // --- attach PC event handlers\r\n        const self = this;\r\n        script.prototype.initialize = function () {\r\n            if (self.scriptInstance)\r\n                return;\r\n            self.scriptInstance = this;\r\n            self.onInitialize(this);\r\n        };\r\n    }\r\n    onInitialize(script) {\r\n        // --- events\r\n        script.on("attr", (name, value) => {\r\n            this.updateUniformValues(script, name);\r\n        });\r\n        // --- execute\r\n        this.updateUniformValues(script);\r\n    }\r\n    normalizeUniformValue(value, effectUniform) {\r\n        switch (effectUniform.pcType) {\r\n            case "boolean":\r\n                return value === true ? 1 : 0;\r\n            case "rgb":\r\n                return [value.r, value.g, value.b];\r\n            default:\r\n                return value;\r\n        }\r\n    }\r\n    updateUniformValues(script, uniformNameUpdated) {\r\n        for (const effectUniform of this.effectUniforms) {\r\n            if (uniformNameUpdated && effectUniform.name !== uniformNameUpdated)\r\n                continue;\r\n            effectUniform.value =\r\n                script[effectUniform.name] !== undefined\r\n                    ? this.normalizeUniformValue(script[effectUniform.name], effectUniform)\r\n                    : effectUniform.default;\r\n        }\r\n    }\r\n}\r\nexports.ErmisEffectSettings = ErmisEffectSettings;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtZWZmZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvcmUvZXJtaXMtZWZmZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBbUJBLElBQVksZUFNWDtBQU5ELFdBQVksZUFBZTtJQUN6QixrQ0FBZSxDQUFBO0lBQ2YsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYixnQ0FBYSxDQUFBO0lBQ2IsMENBQXVCLENBQUE7QUFDekIsQ0FBQyxFQU5XLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBTTFCO0FBRUQsTUFBc0IsV0FBVztJQU8vQixZQUFZLElBQVksRUFBRSxRQUE4QjtRQUN0RCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUVyQixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBSUQsUUFBUSxDQUFDLEdBQW1CLElBQVMsQ0FBQztJQUV0QyxTQUFTLENBQUMsR0FBbUIsSUFBUyxDQUFDO0lBRXZDLE1BQU0sQ0FBQyxlQUFlLENBQ3BCLGFBQTRCLEVBQzVCLEdBQW9CLEVBQ3BCLE1BQWtCO1FBRWxCLE1BQU0sS0FBSyxHQUNULGFBQWEsQ0FBQyxLQUFLLEtBQUssU0FBUztZQUMvQixDQUFDLENBQUMsYUFBYSxDQUFDLEtBQUs7WUFDckIsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUM7UUFFNUIsSUFBSSxhQUFhLENBQUMsU0FBUyxLQUFLLFNBQVMsRUFBRTtZQUN6QyxPQUFPLGFBQWEsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztTQUNwRDthQUFNO1lBQ0wsT0FBTyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMs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\n\n//# sourceURL=webpack:///./src/core/ermis-effect.ts?')
  },
  "./src/core/ermis-pass.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass ErmisPass {\r\n    constructor(name) {\r\n        this.offscreen = false;\r\n        this.name = name;\r\n        this.canResize = true;\r\n        this.readPixels = false;\r\n        this.samples = 8;\r\n    }\r\n    getVersionES(isGL2) {\r\n        return 2;\r\n    }\r\n    getExtensions(isGL2) {\r\n        return "";\r\n    }\r\n    onInit(script, effect, app) { }\r\n}\r\nexports.ErmisPass = ErmisPass;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtcGFzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL2VybWlzLXBhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxNQUFzQixTQUFTO0lBYTdCLFlBQVksSUFBYTtRQVZsQixjQUFTLEdBQVksS0FBSyxDQUFDO1FBV2hDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLENBQUM7SUFFRCxZQUFZLENBQUMsS0FBYztRQUN6QixPQUFPLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRCxhQUFhLENBQUMsS0FBYztRQUMxQixPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBVyxFQUFFLE1BQW1CLEVBQUUsR0FBUSxJQUFTLENBQUM7Q0FLNUQ7QUFqQ0QsOEJBaUNDIn0=\n\n//# sourceURL=webpack:///./src/core/ermis-pass.ts?')
  },
  "./src/core/ermis-post-effect.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_1 = __webpack_require__(/*! ./ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst ermis_common_1 = __importDefault(__webpack_require__(/*! ../utilities/ermis-common */ "./src/utilities/ermis-common.ts"));\r\nclass ErmisPostEffect {\r\n    constructor(app, effects, script) {\r\n        this.resolution = [0, 0];\r\n        this.matrix = new pc.Mat4();\r\n        this.matrixPrevious = new pc.Mat4();\r\n        this.primitive = {\r\n            type: pc.PRIMITIVE_TRISTRIP,\r\n            base: 0,\r\n            count: 4,\r\n            indexed: false\r\n        };\r\n        this.app = app;\r\n        this.effects = effects;\r\n        this.camera = script.camera;\r\n        this.script = script;\r\n        this.frame = 0;\r\n        this.extendPcPostEffect();\r\n        this.getUniquePasses();\r\n        this.app.graphicsDevice.on("resizecanvas", this.resizeRenderTargets, this);\r\n        script.on("destroy", () => {\r\n            this.app.graphicsDevice.off("resizecanvas", this.resizeRenderTargets, this);\r\n        });\r\n    }\r\n    extendPcPostEffect() {\r\n        // @ts-ignore\r\n        pc.PostEffect.call(this, this.app.graphicsDevice);\r\n        // --- request the creation of a depth map, only in WebGL1, in 2 we are overriding the default methods\r\n        // @ts-ignore\r\n        if (this.app.graphicsDevice.webgl2 === false) {\r\n            this.needsDepthBuffer = true;\r\n        }\r\n    }\r\n    instantiatePassFromID(id) {\r\n        switch (id\r\n        // case "PassDepth":\r\n        //   return new ErmisPassDepth();\r\n        ) {\r\n        }\r\n    }\r\n    getUniquePasses() {\r\n        this.passes = [];\r\n        this.effectsUniforms = [];\r\n        this.perEffectUniformsObj = {};\r\n        this.renderOrders = [];\r\n        for (const effect of this.effects) {\r\n            // --- gather all effect uniforms first\r\n            const uniformsList = effect.getUniforms();\r\n            const definesList = ermis_effect_1.ErmisEffect.getDefinesFromUniforms(effect.getUniforms());\r\n            const effectUniforms = {\r\n                uniforms: uniformsList,\r\n                uniformsStr: ermis_effect_1.ErmisEffect.uniformsToString(uniformsList),\r\n                defines: definesList,\r\n                definesStr: ermis_effect_1.ErmisEffect.definesToString(definesList)\r\n            };\r\n            this.perEffectUniformsObj[effect.name] = effectUniforms;\r\n            // --- check if uniform has already been defined\r\n            for (const uniform of effectUniforms.uniforms) {\r\n                if (!uniform.type)\r\n                    continue;\r\n                if (this.effectsUniforms.find((uniformToCheck) => {\r\n                    return uniform.name === uniformToCheck.name;\r\n                }) === undefined) {\r\n                    this.effectsUniforms.push(uniform);\r\n                }\r\n            }\r\n            // --- collect all render passes\r\n            let count = 0;\r\n            for (const pass of effect.passes) {\r\n                let passID = typeof pass === "object" ? pass.name : pass;\r\n                // --- if pass is provided by string to instantiate, check if pass already exists. We require that only once\r\n                if (typeof pass === "string" &&\r\n                    this.passes.find((passToCheck) => passToCheck.name === passID) !== undefined)\r\n                    continue;\r\n                // --- otherwise add it to the list, and instantiate it if necessary\r\n                let finalPass;\r\n                if (typeof pass === "string") {\r\n                    finalPass = this.instantiatePassFromID(passID);\r\n                }\r\n                else {\r\n                    finalPass = pass;\r\n                }\r\n                this.passes.push(finalPass);\r\n                // --- generate a render order\r\n                count++;\r\n                const rt = ErmisPostEffect.createRenderTarget(this.app, pass, count);\r\n                pass.renderTarget = rt;\r\n                pass.onInit(this.script, effect, this.app);\r\n                this.renderOrders.push({\r\n                    shader: this.createShader(effect, finalPass),\r\n                    pass: finalPass,\r\n                    effect: effect,\r\n                    target: rt\r\n                });\r\n            }\r\n            effect.onEnable(this.app);\r\n        }\r\n    }\r\n    getShaderDefinition(perEffectUniforms, pass) {\r\n        let vshader;\r\n        // @ts-ignore\r\n        const isGL2 = this.app.graphicsDevice.webgl2;\r\n        const passVS = pass.getVS(isGL2);\r\n        if (passVS) {\r\n            vshader = passVS + "\\n// Ermis shader;";\r\n        }\r\n        else {\r\n            vshader = `attribute vec2 aPosition;\r\n        \r\n      // Ermis shader;\r\n\r\n      varying vec2 vUv0;\r\n      \r\n      void main(void)\r\n      {\r\n          gl_Position = vec4(aPosition, 0.0, 1.0);\r\n          vUv0 = (aPosition.xy + 1.0) * 0.5;\r\n      }`;\r\n        }\r\n        let isES3 = false;\r\n        let extensions = "";\r\n        let varying = "varying vec2 vUv0;";\r\n        if (isGL2 === true && pass.getVersionES(isGL2) === 3) {\r\n            extensions += "#version 300 es";\r\n            varying = "in vec2 vUv0;";\r\n            isES3 = true;\r\n        }\r\n        extensions += pass.getExtensions(isGL2);\r\n        const definition = {\r\n            attributes: {\r\n                aPosition: pc.SEMANTIC_POSITION\r\n            },\r\n            vshader: vshader,\r\n            fshader: `${extensions}  \r\n        precision ${this.app.graphicsDevice.precision} float;\r\n\r\n        // Ermis shader;\r\n\r\n        ${isGL2 ? "#define GL2\\n" : ""}\r\n        ${isES3 ? "#define ES3\\n" : ""}\r\n\r\n        ${perEffectUniforms.definesStr}\r\n\r\n        ${perEffectUniforms.uniformsStr}\r\n\r\n        ${varying}\r\n\r\n        ${ermis_common_1.default.fragmentMethods}\r\n\r\n        ${pass.getPS(isGL2)}\r\n      `,\r\n            useTransformFeedback: undefined\r\n        };\r\n        return definition;\r\n    }\r\n    createShader(effect, pass) {\r\n        return new pc.Shader(this.app.graphicsDevice, this.getShaderDefinition(this.perEffectUniformsObj[effect.name], pass), undefined);\r\n    }\r\n    static createRenderTarget(app, pass, count) {\r\n        pass.width = pass.width ? pass.width : app.graphicsDevice.width;\r\n        pass.height = pass.height ? pass.height : app.graphicsDevice.height;\r\n        const colorBuffer = new pc.Texture(app.graphicsDevice, {\r\n            format: pc.PIXELFORMAT_R8_G8_B8_A8,\r\n            width: pass.width,\r\n            height: pass.height\r\n        });\r\n        colorBuffer.name = `${pass.name}${count}RT`;\r\n        const rt = new pc.RenderTarget({\r\n            colorBuffer: colorBuffer,\r\n            //depth: true,\r\n            samples: pass.samples\r\n        });\r\n        // @ts-ignore\r\n        rt.ermisCanResize = pass.canResize;\r\n        if (pass.canResize === true) {\r\n            colorBuffer.minFilter = pc.FILTER_NEAREST;\r\n            colorBuffer.magFilter = pc.FILTER_NEAREST;\r\n            colorBuffer.addressU = pc.ADDRESS_CLAMP_TO_EDGE;\r\n            colorBuffer.addressV = pc.ADDRESS_CLAMP_TO_EDGE;\r\n        }\r\n        return rt;\r\n    }\r\n    resizeRenderTargets() {\r\n        for (const order of this.renderOrders) {\r\n            // @ts-ignore\r\n            this.camera.camera.postEffects._resizeOffscreenTarget(order.target);\r\n        }\r\n    }\r\n    render(inputTarget, outputTarget, rect) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!inputTarget)\r\n                return;\r\n            const device = this.device;\r\n            const scope = device.scope;\r\n            // --- add common global uniforms\r\n            scope.resolve("uColorBuffer").setValue(inputTarget.colorBuffer);\r\n            // @ts-ignore\r\n            if (this.app.graphicsDevice.webgl2 === true)\r\n                scope.resolve("uDepthMap").setValue(this.script.depthBuffer);\r\n            scope.resolve("cameraNear").setValue(this.camera.camera.nearClip);\r\n            scope.resolve("cameraFar").setValue(this.camera.camera.farClip);\r\n            scope.resolve("time").setValue(this.script.time);\r\n            scope.resolve("delta").setValue(this.script.delta);\r\n            scope\r\n                .resolve("matrix_viewProjectionPrevious")\r\n                .setValue(this.matrixPrevious.data);\r\n            scope\r\n                .resolve("matrix_viewProjectionInversePrevious")\r\n                .setValue(this.matrix.data);\r\n            const matrixValue = scope.resolve("matrix_viewProjection").getValue();\r\n            this.matrix.set(matrixValue);\r\n            this.matrix.invert();\r\n            scope.resolve("matrix_viewProjectionInverse").setValue(this.matrix.data);\r\n            this.resolution[0] = device.width;\r\n            this.resolution[1] = device.height;\r\n            scope.resolve("resolution").setValue(this.resolution);\r\n            // --- put all effect uniforms to the global scope and assign values\r\n            for (const effectUniform of this.effectsUniforms) {\r\n                if (effectUniform.define === true || !effectUniform.type)\r\n                    continue;\r\n                const value = ermis_effect_1.ErmisEffect.getUniformValue(effectUniform, this.app, this.camera);\r\n                scope.resolve(effectUniform.name).setValue(value ? value : 0);\r\n            }\r\n            // --- decide final output target before entering the main render loop\r\n            let lastPassCount;\r\n            for (let i = this.renderOrders.length - 1; i >= 0; i--) {\r\n                if (this.renderOrders[i].pass.offscreen === false) {\r\n                    lastPassCount = i + 1;\r\n                    break;\r\n                }\r\n            }\r\n            // --- all passes are rendering offscreen, return\r\n            // if (!lastPassCount) {\r\n            //   return;\r\n            // }\r\n            // --- render the passes\r\n            let count = 0;\r\n            this.frame++;\r\n            let previousOrder;\r\n            let currentOrder;\r\n            for (const order of this.renderOrders) {\r\n                count++;\r\n                // --- keep track of the previous/current effect\r\n                if (currentOrder && order.effect.name !== currentOrder.effect.name) {\r\n                    if (currentOrder.effect.canChain === true) {\r\n                        previousOrder = currentOrder;\r\n                    }\r\n                    // --- if this is a new effect we are rendering then we pass all passes of this effect to this effect\r\n                    for (const pass of order.effect.passes) {\r\n                        scope.resolve(`${pass.name}`).setValue(pass.renderTarget.colorBuffer);\r\n                        scope\r\n                            .resolve("mipLevel")\r\n                            .setValue((Math.log(pass.width) / Math.log(2.0)).toFixed(1));\r\n                    }\r\n                }\r\n                if (count === 1) {\r\n                    for (const pass of order.effect.passes) {\r\n                        scope.resolve(`${pass.name}`).setValue(pass.renderTarget.colorBuffer);\r\n                        scope\r\n                            .resolve("mipLevel")\r\n                            .setValue((Math.log(pass.width) / Math.log(2.0)).toFixed(1));\r\n                    }\r\n                }\r\n                currentOrder = order;\r\n                // --- input the previous pass output to the global scope if available\r\n                if (previousOrder) {\r\n                    // --- get last renderable pass target\r\n                    let lastTarget = previousOrder.target;\r\n                    for (let i = previousOrder.effect.passes.length - 1; i >= 0; i--) {\r\n                        const lastPass = previousOrder.effect.passes[i];\r\n                        if (lastPass.offscreen === false) {\r\n                            lastTarget = lastPass.renderTarget;\r\n                            break;\r\n                        }\r\n                    }\r\n                    scope.resolve("previousEffect").setValue(lastTarget.colorBuffer);\r\n                }\r\n                else {\r\n                    scope.resolve("previousEffect").setValue(inputTarget.colorBuffer);\r\n                }\r\n                // --- decide the output target, last pass is the final\r\n                let target = order.target;\r\n                if (count === lastPassCount) {\r\n                    target = outputTarget;\r\n                }\r\n                pc.drawFullscreenQuad(device, target, this.vertexBuffer, order.shader, rect);\r\n                this.matrixPrevious.set(scope.resolve("matrix_viewProjection").getValue());\r\n            }\r\n        });\r\n    }\r\n    destroy() {\r\n        for (const order of this.renderOrders) {\r\n            order.target.destroy();\r\n        }\r\n    }\r\n}\r\nexports.default = ErmisPostEffect;\r\n//# sourceMappingURL=data:application/json;base64,\n\n//# sourceURL=webpack:///./src/core/ermis-post-effect.ts?')
  },
  "./src/core/main.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_dof_1 = __importDefault(__webpack_require__(/*! ../effects/ermis-effect-dof */ "./src/effects/ermis-effect-dof.ts"));\r\nconst ermis_effect_godrays_1 = __importDefault(__webpack_require__(/*! ../effects/ermis-effect-godrays */ "./src/effects/ermis-effect-godrays.ts"));\r\nconst ermis_effect_sao_1 = __importDefault(__webpack_require__(/*! ../effects/ermis-effect-sao */ "./src/effects/ermis-effect-sao.ts"));\r\nconst ermis_effect_filmic_1 = __importDefault(__webpack_require__(/*! ../effects/ermis-effect-filmic */ "./src/effects/ermis-effect-filmic.ts"));\r\nconst ermis_effect_motionBlur_1 = __importDefault(__webpack_require__(/*! ../effects/ermis-effect-motionBlur */ "./src/effects/ermis-effect-motionBlur.ts"));\r\nconst ermis_effect_adaptiveEye_1 = __importDefault(__webpack_require__(/*! ../effects/ermis-effect-adaptiveEye */ "./src/effects/ermis-effect-adaptiveEye.ts"));\r\nconst ermis_effect_ssr_1 = __importDefault(__webpack_require__(/*! ../effects/ermis-effect-ssr */ "./src/effects/ermis-effect-ssr.ts"));\r\nconst ermis_post_effect_1 = __importDefault(__webpack_require__(/*! ./ermis-post-effect */ "./src/core/ermis-post-effect.ts"));\r\nclass Main {\r\n    constructor(effectSettings) {\r\n        this.effects = [];\r\n        this.effectSettings = effectSettings;\r\n        // --- execute\r\n        this.createPcScript();\r\n    }\r\n    createPcScript() {\r\n        const script = pc.createScript("ermisSpecialEffects");\r\n        script.attributes.add("EffectDof", {\r\n            type: "boolean",\r\n            title: "DOF",\r\n            default: true,\r\n            description: "Check to enable Depth of Field (DOF)."\r\n        });\r\n        script.attributes.add("EffectGodrays", {\r\n            type: "boolean",\r\n            title: "Godrays",\r\n            default: false,\r\n            description: "Check to enable Godrays."\r\n        });\r\n        script.attributes.add("EffectSAO", {\r\n            type: "boolean",\r\n            title: "SAO",\r\n            default: true,\r\n            description: "Check to enable Scalable Ambient Occlusion (SAO). If you experience artifacts/banding on vertical edges increase the your camera rear clipping plane to a higher value e.g. 0.1 or 1.0"\r\n        });\r\n        script.attributes.add("EffectFilmic", {\r\n            type: "boolean",\r\n            title: "Filmic",\r\n            default: false,\r\n            description: "A number of effects that simulate the function of a camera lens."\r\n        });\r\n        script.attributes.add("EffectMotionBlur", {\r\n            type: "boolean",\r\n            title: "Motion Blur",\r\n            default: true,\r\n            description: "Check to enable a camera based motion blur effect."\r\n        });\r\n        script.attributes.add("EffectAdaptiveEye", {\r\n            type: "boolean",\r\n            title: "Adaptive Eye",\r\n            default: true,\r\n            description: "Check to enable an adaptive eye exposure effect."\r\n        });\r\n        // script.attributes.add("EffectSSR", {\r\n        //   type: "boolean",\r\n        //   title: "Screen Space Reflections",\r\n        //   default: true,\r\n        //   description: "Check to enable screen space reflections."\r\n        // });\r\n        script.attributes.add("camera", {\r\n            type: "entity",\r\n            title: "Camera",\r\n            description: "Set the active camera to render the post effects to. If none is provided the script will attempt to find a camera named \'Camera\'."\r\n        });\r\n        script.attributes.add("mobilePerformance", {\r\n            type: "boolean",\r\n            title: "Mobile Performance",\r\n            description: "If selected, effects not working on mobile devices will be turned off automatically when running on a non supported device."\r\n        });\r\n        script.attributes.add("mobileAutoDisable", {\r\n            type: "boolean",\r\n            title: "Mobile Disable",\r\n            description: "If selected all effects will be turned off automatically when running on a mobile/tablet device."\r\n        });\r\n        // --- attach PC event handlers\r\n        const self = this;\r\n        script.prototype.initialize = function () {\r\n            if (self.scriptInstance)\r\n                return;\r\n            this.time = 0.0;\r\n            self.scriptInstance = this;\r\n            self.onInitialize(this);\r\n        };\r\n        script.prototype.update = function (dt) {\r\n            this.time += dt;\r\n            this.delta = dt;\r\n        };\r\n        return script;\r\n    }\r\n    onInitialize(script) {\r\n        this.requestDepthMap(script.app, script);\r\n        // --- timeout to allow the settings scripts grab their initial value, without resorting to script ordering\r\n        window.setTimeout(() => {\r\n            // --- variables\r\n            // --- events\r\n            script.app.on("ermis:setActiveCamera", (camera) => {\r\n                this.setActiveCamera(script, camera);\r\n            });\r\n            script.app.on("ermis:setEffect", (effectID, state) => {\r\n                script[effectID] = state;\r\n            });\r\n            script.app.on("ermis:switchEffect", (effectID) => {\r\n                script[effectID] = !script[effectID];\r\n            });\r\n            script.on("attr", (name, value) => {\r\n                console.log("Ermis Special Effects, property updated: ", name, value);\r\n                this.bootEffects(script, false);\r\n            });\r\n            script.on("state", (enabled) => {\r\n                const queue = script.camera.camera.postEffects;\r\n                if (enabled) {\r\n                    queue.addEffect(this.postEffect);\r\n                }\r\n                else {\r\n                    queue.removeEffect(this.postEffect);\r\n                }\r\n            });\r\n            script.on("destroy", () => {\r\n                const queue = script.camera.camera.postEffects;\r\n                queue.removeEffect(this.postEffect);\r\n            });\r\n            // --- execute\r\n            this.setActiveCamera(script);\r\n            this.bootEffects(script, true);\r\n        }, 0);\r\n    }\r\n    setActiveCamera(script, camera) {\r\n        if (camera) {\r\n            script.camera = camera;\r\n        }\r\n        else if (!script.camera) {\r\n            script.camera = script.app.root.findByName("Camera");\r\n        }\r\n    }\r\n    bootEffects(script, initial) {\r\n        this.effectsSelected = [];\r\n        // --- check the mobile auto disable switch\r\n        let disableEffects = false;\r\n        let performanceEffects = false;\r\n        if (initial === true) {\r\n            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n                if (script.mobilePerformance === true)\r\n                    performanceEffects = true;\r\n                if (script.mobileAutoDisable === true)\r\n                    disableEffects = true;\r\n            }\r\n        }\r\n        if (disableEffects === false) {\r\n            for (const effectID of Main.effectsOrder) {\r\n                if (script[effectID] === false)\r\n                    continue;\r\n                let effectInstance = this.effects.find((effectToFind) => {\r\n                    return effectToFind.constructor.name === `ErmisEffect${effectID}`;\r\n                });\r\n                if (!effectInstance) {\r\n                    const settings = this.effectSettings.find((effectSettings) => {\r\n                        return effectSettings.effectID === effectID;\r\n                    });\r\n                    switch (effectID) {\r\n                        case "EffectDof":\r\n                            effectInstance = new ermis_effect_dof_1.default(effectID, settings);\r\n                            break;\r\n                        case "EffectGodrays":\r\n                            effectInstance = new ermis_effect_godrays_1.default(effectID, settings);\r\n                            break;\r\n                        case "EffectSAO":\r\n                            if (performanceEffects === false) {\r\n                                effectInstance = new ermis_effect_sao_1.default(effectID, settings);\r\n                            }\r\n                            break;\r\n                        case "EffectFilmic":\r\n                            effectInstance = new ermis_effect_filmic_1.default(effectID, settings);\r\n                            break;\r\n                        case "EffectMotionBlur":\r\n                            effectInstance = new ermis_effect_motionBlur_1.default(effectID, settings);\r\n                            break;\r\n                        case "EffectAdaptiveEye":\r\n                            effectInstance = new ermis_effect_adaptiveEye_1.default(effectID, settings);\r\n                            break;\r\n                        case "EffectSSR":\r\n                            if (performanceEffects === false) {\r\n                                effectInstance = new ermis_effect_ssr_1.default(effectID, settings);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                if (effectInstance)\r\n                    this.effectsSelected.push(effectInstance);\r\n            }\r\n        }\r\n        this.createPostEffect(script.app, script);\r\n    }\r\n    createPostEffect(app, script) {\r\n        const queue = script.camera.camera.postEffects;\r\n        // const layer: any = app.scene.layers.getLayerByName("Effects");\r\n        // layer.renderTarget = app.scene.layers.getLayerByName(\r\n        //   "Effects"\r\n        // ).renderTarget;\r\n        // layer.clear = false;\r\n        // layer._commandList = [];\r\n        // @ts-ignore\r\n        // queue.layer = layer;\r\n        if (this.postEffect) {\r\n            queue.removeEffect(this.postEffect);\r\n            this.postEffect.destroy();\r\n            this.postEffect = undefined;\r\n        }\r\n        if (this.effectsSelected.length > 0) {\r\n            this.postEffect = new ermis_post_effect_1.default(app, this.effectsSelected, script);\r\n            // --- call enable on all effects\r\n            this.effectsSelected.forEach((effect) => {\r\n                effect.onEnable(app);\r\n            });\r\n            queue.addEffect(this.postEffect);\r\n        }\r\n    }\r\n    requestDepthMap(app, script) {\r\n        // // @ts-ignore\r\n        // if (app.graphicsDevice.webgl2 === false) {\r\n        //   const depthLayer: pc.Layer = app.scene.layers.getLayerById(\r\n        //     pc.LAYERID_DEPTH\r\n        //   );\r\n        //   // @ts-ignore\r\n        //   if (app.graphicsDevice.webgl2 === true) {\r\n        //     // @ts-ignore\r\n        //     depthLayer.incrementCounter();\r\n        //     script.on("enable", function() {\r\n        //       // @ts-ignore\r\n        //       depthLayer.incrementCounter();\r\n        //     });\r\n        //     script.on("disable", function() {\r\n        //       // @ts-ignore\r\n        //       depthLayer.decrementCounter();\r\n        //     });\r\n        //   }\r\n        // }\r\n        // --- Fix a PC bug with retrieving the depth map in WebGL1\r\n        // @ts-ignore\r\n        if (app.graphicsDevice.webgl2 === false) {\r\n            var depthLayer = app.scene.layers.getLayerByName("Depth");\r\n            var self = app;\r\n            // prettier-ignore\r\n            depthLayer.onPostCull = function (cameraPass) {\r\n                // Collect all rendered mesh instances with the same render target as World has, depthWrite == true and prior to this layer to replicate blitFramebuffer on WebGL2\r\n                // @ts-ignore\r\n                var visibleObjects = this.instances.visibleOpaque[cameraPass];\r\n                var visibleList = visibleObjects.list;\r\n                var visibleLength = 0;\r\n                var layers = self.scene.layers.layerList;\r\n                var subLayerEnabled = self.scene.layers.subLayerEnabled;\r\n                var isTransparent = self.scene.layers.subLayerList;\r\n                // @ts-ignore\r\n                var rt = self.defaultLayerWorld.renderTarget;\r\n                // @ts-ignore\r\n                var cam = this.cameras[cameraPass];\r\n                var layer;\r\n                var j;\r\n                var layerVisibleList, layerCamId, layerVisibleListLength, drawCall, transparent;\r\n                for (var i = 0; i < layers.length; i++) {\r\n                    layer = layers[i];\r\n                    if (layer === this)\r\n                        break;\r\n                    //if (layer.renderTarget !== rt || !layer.enabled || !subLayerEnabled[i]) continue;\r\n                    // @ts-ignore\r\n                    layerCamId = layer.cameras.indexOf(cam);\r\n                    if (layerCamId < 0)\r\n                        continue;\r\n                    transparent = isTransparent[i];\r\n                    // @ts-ignore\r\n                    layerVisibleList = transparent ? layer.instances.visibleTransparent[layerCamId] : layer.instances.visibleOpaque[layerCamId];\r\n                    layerVisibleListLength = layerVisibleList.length;\r\n                    layerVisibleList = layerVisibleList.list;\r\n                    for (j = 0; j < layerVisibleListLength; j++) {\r\n                        drawCall = layerVisibleList[j];\r\n                        if (drawCall.material && drawCall.material.depthWrite && !drawCall._noDepthDrawGl1) {\r\n                            visibleList[visibleLength] = drawCall;\r\n                            visibleLength++;\r\n                        }\r\n                    }\r\n                }\r\n                visibleObjects.length = visibleLength;\r\n            };\r\n        }\r\n        // --- override the PC PostEffect renderTarget functions to add MSAA sampling for WebGL2\r\n        // @ts-ignore\r\n        if (app.graphicsDevice.webgl2 === true) {\r\n            // @ts-ignore\r\n            pc.PostEffectQueue.prototype._createOffscreenTarget = function (useDepth, hdr) {\r\n                // @ts-ignore\r\n                var rect = this.camera.rect;\r\n                var width = Math.floor(\r\n                // @ts-ignore\r\n                rect.z * this.app.graphicsDevice.width * this.renderTargetScale);\r\n                var height = Math.floor(\r\n                // @ts-ignore\r\n                rect.w * this.app.graphicsDevice.height * this.renderTargetScale);\r\n                // @ts-ignore\r\n                var device = this.app.graphicsDevice;\r\n                var format = hdr ? device.getHdrFormat() : pc.PIXELFORMAT_R8_G8_B8_A8;\r\n                var colorBuffer = new pc.Texture(device, {\r\n                    format: format,\r\n                    width: width,\r\n                    height: height\r\n                });\r\n                colorBuffer.name = "posteffect";\r\n                colorBuffer.minFilter = pc.FILTER_NEAREST;\r\n                colorBuffer.magFilter = pc.FILTER_NEAREST;\r\n                colorBuffer.addressU = pc.ADDRESS_CLAMP_TO_EDGE;\r\n                colorBuffer.addressV = pc.ADDRESS_CLAMP_TO_EDGE;\r\n                if (useDepth !== true) {\r\n                    // @ts-ignore\r\n                    return new pc.RenderTarget(this.app.graphicsDevice, colorBuffer);\r\n                }\r\n                else {\r\n                    // @ts-ignore\r\n                    var depthBuffer = new pc.Texture(this.app.graphicsDevice, {\r\n                        format: pc.PIXELFORMAT_DEPTHSTENCIL,\r\n                        width: width,\r\n                        height: height\r\n                    });\r\n                    depthBuffer.name = "posteffect";\r\n                    script.depthBuffer = depthBuffer;\r\n                    depthBuffer.minFilter = pc.FILTER_NEAREST;\r\n                    depthBuffer.magFilter = pc.FILTER_NEAREST;\r\n                    depthBuffer.addressU = pc.ADDRESS_CLAMP_TO_EDGE;\r\n                    depthBuffer.addressV = pc.ADDRESS_CLAMP_TO_EDGE;\r\n                    return new pc.RenderTarget({\r\n                        colorBuffer: colorBuffer,\r\n                        depthBuffer: depthBuffer,\r\n                        autoResolve: true,\r\n                        samples: device.samples\r\n                    });\r\n                }\r\n            };\r\n            // @ts-ignore\r\n            pc.PostEffectQueue.prototype._resizeOffscreenTarget = function (rt) {\r\n                if (rt.ermisCanResize === false)\r\n                    return false;\r\n                // @ts-ignore\r\n                var rect = this.camera.rect;\r\n                var width = Math.floor(\r\n                // @ts-ignore\r\n                rect.z * this.app.graphicsDevice.width * this.renderTargetScale);\r\n                var height = Math.floor(\r\n                // @ts-ignore\r\n                rect.w * this.app.graphicsDevice.height * this.renderTargetScale);\r\n                // @ts-ignore\r\n                var device = this.app.graphicsDevice;\r\n                var format = rt.colorBuffer.format;\r\n                rt._colorBuffer.destroy();\r\n                var colorBuffer = new pc.Texture(device, {\r\n                    format: format,\r\n                    width: width,\r\n                    height: height\r\n                });\r\n                colorBuffer.name = "posteffect";\r\n                colorBuffer.minFilter = pc.FILTER_NEAREST;\r\n                colorBuffer.magFilter = pc.FILTER_NEAREST;\r\n                colorBuffer.addressU = pc.ADDRESS_CLAMP_TO_EDGE;\r\n                colorBuffer.addressV = pc.ADDRESS_CLAMP_TO_EDGE;\r\n                rt._colorBuffer = colorBuffer;\r\n                if (rt.depthBuffer) {\r\n                    rt._depthBuffer.destroy();\r\n                    var depthBuffer = new pc.Texture(device, {\r\n                        format: pc.PIXELFORMAT_DEPTHSTENCIL,\r\n                        width: width,\r\n                        height: height\r\n                    });\r\n                    depthBuffer.name = "posteffect";\r\n                    depthBuffer.minFilter = pc.FILTER_NEAREST;\r\n                    depthBuffer.magFilter = pc.FILTER_NEAREST;\r\n                    depthBuffer.addressU = pc.ADDRESS_CLAMP_TO_EDGE;\r\n                    depthBuffer.addressV = pc.ADDRESS_CLAMP_TO_EDGE;\r\n                    rt._depthBuffer = depthBuffer;\r\n                    script.depthBuffer = depthBuffer;\r\n                }\r\n                rt.destroy();\r\n            };\r\n        }\r\n    }\r\n}\r\nexports.default = Main;\r\nMain.effectsOrder = [\r\n    "EffectMotionBlur",\r\n    "EffectGodrays",\r\n    "EffectAdaptiveEye",\r\n    "EffectDof",\r\n    "EffectSAO",\r\n    "EffectFilmic"\r\n    //"EffectSSR"\r\n];\r\n//# sourceMappingURL=data:application/json;base64,\n\n//# sourceURL=webpack:///./src/core/main.ts?')
  },
  "./src/effects/ermis-effect-adaptiveEye.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_1 = __webpack_require__(/*! ../core/ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst ermis_pass_1 = __webpack_require__(/*! ../core/ermis-pass */ "./src/core/ermis-pass.ts");\r\nclass ErmisEffectAdaptiveEye extends ermis_effect_1.ErmisEffect {\r\n    constructor(name, settings) {\r\n        super(name, settings);\r\n        this.canChain = false;\r\n        this.passes = [];\r\n        this.passes.push(new ErmisPassLuminosity(ErmisPassLuminosity.ID));\r\n        this.passes.push(new ErmisPassAdaptiveLuminosity(ErmisPassAdaptiveLuminosity.ID));\r\n        this.passes.push(new ErmisPassAdaptiveLuminosityPrev(ErmisPassAdaptiveLuminosityPrev.ID));\r\n    }\r\n    getUniforms() {\r\n        return ErmisEffectAdaptiveEye.EffectUniforms;\r\n    }\r\n}\r\nexports.default = ErmisEffectAdaptiveEye;\r\nErmisEffectAdaptiveEye.ID = "EffectAdaptiveEye";\r\nErmisEffectAdaptiveEye.EffectUniforms = [\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "adaptionMinLuminance",\r\n        title: "Min Luminance",\r\n        description: "Determines the minimum luminance difference between light/dark regions to affect the target exposure.",\r\n        inEditor: true,\r\n        default: 0.2,\r\n        min: 0,\r\n        max: 1,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "adaptionTau",\r\n        title: "Adaption Offset",\r\n        description: "The maximum offset (plus/minus) to be added to the base scene exposure.",\r\n        inEditor: true,\r\n        default: 1.0,\r\n        min: 0,\r\n        max: 1,\r\n        precision: 2,\r\n        calcValue: (value) => {\r\n            return value * 100;\r\n        }\r\n    }\r\n];\r\nclass ErmisPassLuminosity extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n        this.offscreen = true;\r\n        this.width = 256;\r\n        this.height = 256;\r\n        this.samples = 1;\r\n        this.canResize = false;\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        const shader = `\r\n          uniform sampler2D previousEffect;\r\n\r\n          float linearToRelativeLuminance( const in vec3 color ) {\r\n            vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\r\n            return dot( weights, color.rgb );\r\n          }          \r\n    \r\n          void main() {     \r\n\r\n            vec4 texel = texture2D( previousEffect, vUv0 );\r\n\r\n            float l = 1.0 - linearToRelativeLuminance( texel.rgb );\r\n        \r\n            gl_FragColor = vec4( l, l, l, texel.w );\r\n          }    \r\n        `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassLuminosity.ID = "PassLuminosity";\r\nclass ErmisPassAdaptiveLuminosity extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n        this.offscreen = true;\r\n        this.width = 256;\r\n        this.height = 256;\r\n        this.samples = 1;\r\n        this.canResize = false;\r\n        this.oldShaders = {};\r\n    }\r\n    onInit(script, effect, app) {\r\n        if (!script.adaptiveEyeShadersInPlace) {\r\n            script.adaptiveEyeShadersInPlace = true;\r\n            // --- override pc tonemapping shader chunks\r\n            this.oldShaders.tonemappingFilmicPS = pc.shaderChunks.tonemappingFilmicPS;\r\n            pc.shaderChunks.tonemappingFilmicPS = `\r\n  const float A =  0.15;\r\n  const float B =  0.50;\r\n  const float C =  0.10;\r\n  const float D =  0.20;\r\n  const float E =  0.02;\r\n  const float F =  0.30;\r\n  const float W =  11.2;\r\n  \r\n  uniform float exposure;\r\n  uniform sampler2D uLuminanceMap;\r\n  \r\n  vec3 uncharted2Tonemap(vec3 x) {\r\n      return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\r\n  }\r\n  \r\n  vec3 toneMap(vec3 color) {\r\n      float lum = texture2D(uLuminanceMap, vec2(0.5, 0.5)).r;\r\n      color = uncharted2Tonemap(color * exposure * lum);\r\n      vec3 whiteScale = 1.0 / uncharted2Tonemap(vec3(W,W,W));\r\n      color = color * whiteScale;\r\n  \r\n      return color;\r\n  }\r\n  `;\r\n            this.oldShaders.tonemappingLinearPS = pc.shaderChunks.tonemappingLinearPS;\r\n            pc.shaderChunks.tonemappingLinearPS = `\r\n  uniform float exposure;\r\n  uniform sampler2D uLuminanceMap;\r\n  \r\n  vec3 toneMap(vec3 color) {\r\n      float lum = texture2D(uLuminanceMap, vec2(0.5, 0.5)).r;\r\n      return color * exposure * lum;\r\n  }\r\n  `;\r\n            this.oldShaders.tonemappingHejlPS = pc.shaderChunks.tonemappingHejlPS;\r\n            pc.shaderChunks.tonemappingHejlPS = `\r\n  uniform float exposure;\r\n  uniform sampler2D uLuminanceMap;\r\n  \r\n  vec3 toneMap(vec3 color) {\r\n    float lum = texture2D(uLuminanceMap, vec2(0.5, 0.5)).r;\r\n    color *= exposure * lum;\r\n    const float  A = 0.22, B = 0.3, C = .1, D = 0.2, E = .01, F = 0.3;\r\n    const float Scl = 1.25;\r\n  \r\n    vec3 h = max( vec3(0.0), color - vec3(0.004) );\r\n    return (h*((Scl*A)*h+Scl*vec3(C*B,C*B,C*B))+Scl*vec3(D*E,D*E,D*E)) / (h*(A*h+vec3(B,B,B))+vec3(D*F,D*F,D*F)) - Scl*vec3(E/F,E/F,E/F);\r\n  }\r\n  `;\r\n            this.oldShaders.tonemappingAcesPS = pc.shaderChunks.tonemappingAcesPS;\r\n            pc.shaderChunks.tonemappingAcesPS = `\r\n  uniform float exposure;\r\n  uniform sampler2D uLuminanceMap;\r\n\r\n  vec3 toneMap(vec3 color) {\r\n      float tA = 2.51;\r\n      float tB = 0.03;\r\n      float tC = 2.43;\r\n      float tD = 0.59;\r\n      float tE = 0.14;\r\n  \r\n      float lum = texture2D(uLuminanceMap, vec2(0.5, 0.5)).r;\r\n      vec3 x = color * exposure * lum;\r\n      return (x*(tA*x+tB))/(x*(tC*x+tD)+tE);\r\n  }\r\n  `;\r\n            this.oldShaders.tonemappingAces2PS = pc.shaderChunks.tonemappingAces2PS;\r\n            pc.shaderChunks.tonemappingAces2PS = `\r\n  uniform float exposure;\r\n  uniform sampler2D uLuminanceMap;\r\n  \r\n  // ACES approximation by Stephen Hill\r\n  \r\n  // sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\r\n  const mat3 ACESInputMat = mat3(\r\n      0.59719, 0.35458, 0.04823,\r\n      0.07600, 0.90834, 0.01566,\r\n      0.02840, 0.13383, 0.83777\r\n  );\r\n  \r\n  // ODT_SAT => XYZ => D60_2_D65 => sRGB\r\n  const mat3 ACESOutputMat = mat3(\r\n       1.60475, -0.53108, -0.07367,\r\n      -0.10208,  1.10813, -0.00605,\r\n      -0.00327, -0.07276,  1.07602\r\n  );\r\n  \r\n  vec3 RRTAndODTFit(vec3 v) {\r\n      vec3 a = v * (v + 0.0245786) - 0.000090537;\r\n      vec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\r\n      return a / b;\r\n  }\r\n  \r\n  vec3 toneMap(vec3 color) {\r\n      float lum = texture2D(uLuminanceMap, vec2(0.5, 0.5)).r;\r\n      color *= exposure * exposure * lum;\r\n      color = color * ACESInputMat;\r\n  \r\n      // Apply RRT and ODT\r\n      color = RRTAndODTFit(color);\r\n      color = color * ACESOutputMat;\r\n  \r\n      // Clamp to [0, 1]\r\n      color = clamp(color, 0.0, 1.0);\r\n  \r\n      return color;\r\n  }\r\n  `;\r\n            // --- force a app-wide recompilation of shaders using the exposure/tonemapping\r\n            const library = app.graphicsDevice.getProgramLibrary();\r\n            let i, len;\r\n            for (i = 0, len = app.graphicsDevice.shaders.length; i < len; i++) {\r\n                const shader = app.graphicsDevice.shaders[i];\r\n                const fshader = shader.definition.fshader;\r\n                if (fshader.indexOf("exposure") > -1 &&\r\n                    fshader.indexOf("Ermis shader") === -1) {\r\n                    library.removeFromCache(shader);\r\n                }\r\n            }\r\n        }\r\n        // --- add luminance map to the shader scope\r\n        app.graphicsDevice.scope\r\n            .resolve("uLuminanceMap")\r\n            .setValue(effect.passes[1].renderTarget.colorBuffer);\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        const shader = `\r\n          uniform sampler2D PassAdaptiveLuminosityPrev;\r\n          uniform sampler2D PassLuminosity;\r\n\r\n          void main() {\r\n\r\n            vec4 lastLum = texture2D( PassAdaptiveLuminosityPrev, vUv0, 4.0  );\r\n            vec4 currentLum = texture2D( PassLuminosity, vUv0, 4.0 );\r\n\r\n            float fLastLum = lastLum.r;\r\n            float fCurrentLum = currentLum.r;\r\n    \r\n            //The adaption seems to work better in extreme lighting differences\r\n            fCurrentLum *= fCurrentLum;\r\n    \r\n            // Adapt the luminance using Pattanaik\'s technique\r\n            float fAdaptedLum = fLastLum + (fCurrentLum - fLastLum) * (1.0 - exp(- delta * adaptionTau));\r\n\r\n            gl_FragColor = vec4( vec3( max(adaptionMinLuminance, fAdaptedLum) ), 1.0 );\r\n          }\r\n        `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassAdaptiveLuminosity.ID = "PassAdaptiveLuminosity";\r\nclass ErmisPassAdaptiveLuminosityPrev extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n        this.offscreen = true;\r\n        this.width = 256;\r\n        this.height = 256;\r\n        this.samples = 1;\r\n        this.canResize = false;\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        const shader = `\r\n          uniform sampler2D PassLuminosity;\r\n\r\n          void main() {\r\n\r\n            gl_FragColor = texture2D( PassLuminosity, vUv0 );\r\n          }\r\n        `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassAdaptiveLuminosityPrev.ID = "PassAdaptiveLuminosityPrev";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtZWZmZWN0LWFkYXB0aXZlRXllLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VmZmVjdHMvZXJtaXMtZWZmZWN0LWFkYXB0aXZlRXllLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdURBSzhCO0FBQzlCLG1EQUErQztBQUUvQyxNQUFxQixzQkFBdUIsU0FBUSwwQkFBVztJQW1DN0QsWUFBWSxJQUFZLEVBQUUsUUFBNkI7UUFDckQsS0FBSyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV0QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUV0QixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLG1CQUFtQixDQUFDLG1CQUFtQixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFbEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQ2QsSUFBSSwyQkFBMkIsQ0FBQywyQkFBMkIsQ0FBQyxFQUFFLENBQUMsQ0FDaEUsQ0FBQztRQUVGLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNkLElBQUksK0JBQStCLENBQUMsK0JBQStCLENBQUMsRUFBRSxDQUFDLENBQ3hFLENBQUM7SUFDSixDQUFDO0lBRU0sV0FBVztRQUNoQixPQUFPLHNCQUFzQixDQUFDLGNBQWMsQ0FBQztJQUMvQyxDQUFDOztBQXRESCx5Q0F1REM7QUF0RFEseUJBQUUsR0FBVyxtQkFBbUIsQ0FBQztBQUVqQyxxQ0FBYyxHQUFvQjtJQUN2QztRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsSUFBSSxFQUFFLHNCQUFzQjtRQUM1QixLQUFLLEVBQUUsZUFBZTtRQUN0QixXQUFXLEVBQ1QsdUdBQXVHO1FBQ3pHLFFBQVEsRUFBRSxJQUFJO1FBQ2QsT0FBTyxFQUFFLEdBQUc7UUFDWixHQUFHLEVBQUUsQ0FBQztRQUNOLEdBQUcsRUFBRSxDQUFDO1FBQ04sU0FBUyxFQUFFLENBQUM7S0FDYjtJQUNEO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsYUFBYTtRQUNuQixLQUFLLEVBQUUsaUJBQWlCO1FBQ3hCLFdBQVcsRUFDVCx5RUFBeUU7UUFDM0UsUUFBUSxFQUFFLElBQUk7UUFDZCxPQUFPLEVBQUUsR0FBRztRQUNaLEdBQUcsRUFBRSxDQUFDO1FBQ04sR0FBRyxFQUFFLENBQUM7UUFDTixTQUFTLEVBQUUsQ0FBQztRQUNaLFNBQVMsRUFBRSxDQUFDLEtBQWEsRUFBRSxFQUFFO1lBQzNCLE9BQU8sS0FBSyxHQUFHLEdBQUcsQ0FBQztRQUNyQixDQUFDO0tBQ0Y7Q0FDRixDQUFDO0FBd0JKLE1BQU0sbUJBQW9CLFNBQVEsc0JBQVM7SUFLekMsWUFBWSxJQUFZO1FBQ3RCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVaLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxLQUFLLENBQUMsS0FBYyxJQUFTLENBQUM7SUFFOUIsS0FBSyxDQUFDLEtBQWM7UUFDbEIsTUFBTSxNQUFNLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7U0FnQlYsQ0FBQztRQUNOLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7O0FBbkNNLHNCQUFFLEdBQVcsZ0JBQWdCLENBQUM7QUFzQ3ZDLE1BQU0sMkJBQTRCLFNBQVEsc0JBQVM7SUFNakQsWUFBWSxJQUFZO1FBQ3RCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVaLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBRXZCLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBVyxFQUFFLE1BQW1CLEVBQUUsR0FBUTtRQUMvQyxJQUFJLENBQUMsTUFBTSxDQUFDLHlCQUF5QixFQUFFO1lBQ3JDLE1BQU0sQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUM7WUFFeEMsNENBQTRDO1lBQzVDLElBQUksQ0FBQyxVQUFVLENBQUMsbUJBQW1CLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxtQkFBbUIsQ0FBQztZQUMxRSxFQUFFLENBQUMsWUFBWSxDQUFDLG1CQUFtQixHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F3QnpDLENBQUM7WUFFRSxJQUFJLENBQUMsVUFBVSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsbUJBQW1CLENBQUM7WUFDMUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxtQkFBbUIsR0FBRzs7Ozs7Ozs7R0FRekMsQ0FBQztZQUVFLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQztZQUN0RSxFQUFFLENBQUMsWUFBWSxDQUFDLGlCQUFpQixHQUFHOzs7Ozs7Ozs7Ozs7O0dBYXZDLENBQUM7WUFFRSxJQUFJLENBQUMsVUFBVSxDQUFDLGlCQUFpQixHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUM7WUFDdEUsRUFBRSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsR0FBRzs7Ozs7Ozs7Ozs7Ozs7O0dBZXZDLENBQUM7WUFFRSxJQUFJLENBQUMsVUFBVSxDQUFDLGtCQUFrQixHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsa0JBQWtCLENBQUM7WUFDeEUsRUFBRSxDQUFDLFlBQVksQ0FBQyxrQkFBa0IsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXdDeEMsQ0FBQztZQUVFLCtFQUErRTtZQUMvRSxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFFdkQsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDO1lBQ1gsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDakUsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzdDLE1BQU0sT0FBTyxHQUFXLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO2dCQUVsRCxJQUNFLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUNoQyxPQUFPLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUN0QztvQkFDQSxPQUFPLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUNqQzthQUNGO1NBQ0Y7UUFFRCw0Q0FBNEM7UUFDNUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLO2FBQ3JCLE9BQU8sQ0FBQyxlQUFlLENBQUM7YUFDeEIsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRCxLQUFLLENBQUMsS0FBYyxJQUFTLENBQUM7SUFFOUIsS0FBSyxDQUFDLEtBQWM7UUFDbEIsTUFBTSxNQUFNLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1NBb0JWLENBQUM7UUFDTixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDOztBQXpMTSw4QkFBRSxHQUFXLHdCQUF3QixDQUFDO0FBNEwvQyxNQUFNLCtCQUFnQyxTQUFRLHNCQUFTO0lBS3JELFlBQVksSUFBWTtRQUN0QixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFWixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQWMsSUFBUyxDQUFDO0lBRTlCLEtBQUssQ0FBQyxLQUFjO1FBQ2xCLE1BQU0sTUFBTSxHQUFHOzs7Ozs7O1NBT1YsQ0FBQztRQUNOLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7O0FBMUJNLGtDQUFFLEdBQVcsNEJBQTRCLENBQUMifQ==\n\n//# sourceURL=webpack:///./src/effects/ermis-effect-adaptiveEye.ts?')
  },
  "./src/effects/ermis-effect-dof.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_1 = __webpack_require__(/*! ../core/ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst ermis_pass_1 = __webpack_require__(/*! ../core/ermis-pass */ "./src/core/ermis-pass.ts");\r\nclass ErmisEffectDof extends ermis_effect_1.ErmisEffect {\r\n    constructor(name, settings) {\r\n        super(name, settings);\r\n        this.passes = [];\r\n        this.passes.push(new ErmisPassDof(`${ErmisPassDof.ID}`));\r\n    }\r\n    getUniforms() {\r\n        return ErmisEffectDof.EffectUniforms;\r\n    }\r\n}\r\nexports.default = ErmisEffectDof;\r\nErmisEffectDof.ID = "EffectDof";\r\nErmisEffectDof.EffectUniforms = [\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "dofMaxBlur",\r\n        title: "Max Blur",\r\n        description: "The amount of blurring that will occur.",\r\n        inEditor: true,\r\n        default: 1,\r\n        min: 0,\r\n        max: 3,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "dofAperture",\r\n        title: "Aperture",\r\n        description: "Defines the opening on the rear of the \'lens\' that determines the amount of light that is allowed to travel through.",\r\n        inEditor: true,\r\n        default: 0.005,\r\n        min: 0,\r\n        max: 0.1,\r\n        precision: 3\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "dofFocus",\r\n        title: "Focus",\r\n        description: "The distance from the camera of the focus point where the effect is centered on.",\r\n        inEditor: true,\r\n        default: 10,\r\n        min: 0.01,\r\n        max: 100,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "dofRange",\r\n        title: "Range",\r\n        description: "The area around the focus point where blurring is gradually applied on.",\r\n        inEditor: true,\r\n        default: 25,\r\n        min: 0.01,\r\n        max: 1000,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "dofAspect",\r\n        title: "Aspect",\r\n        description: "Determines the base of the \'lens\' starting point.",\r\n        default: 1,\r\n        inEditor: true\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        name: "dofDebug",\r\n        title: "Debug",\r\n        description: "Ideal to find the correct focus point, white areas get blurred.",\r\n        default: false,\r\n        inEditor: true\r\n    }\r\n];\r\nclass ErmisPassDof extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        let sceneZ = `\r\n      float depth = getScreenDepth(vUv0);\r\n      float cFar = cameraFar / (cameraFar - cameraNear);\r\n      float sceneZ = ( -cameraNear * cFar ) / ( depth - cFar);\r\n    `;\r\n        if (isGL2 === false) {\r\n            sceneZ = `\r\n      float sceneZ = getScreenDepth(vUv0) * cameraFar;\r\n      `;\r\n        }\r\n        const shader = `\r\n      uniform sampler2D previousEffect;\r\n\r\n      void main() {\r\n\r\n        vec2 aspectCorrect = vec2( 1.0, dofAspect );\r\n\r\n        ${sceneZ}\r\n\r\n        float factor = clamp((1.0 / dofFocus - 1.0 / sceneZ) / dofRange * 500.0, -1.0, 1.0);\r\n\r\n        if (dofDebug == 0.0) {\r\n          \r\n          vec2 dofblur = vec2(factor,factor) * dofAperture;\r\n          vec2 dofblur9 = dofblur * 0.9 * dofMaxBlur;\r\n          vec2 dofblur7 = dofblur * 0.7 * dofMaxBlur;\r\n          vec2 dofblur4 = dofblur * 0.4 * dofMaxBlur;\r\n  \r\n          vec4 col;\r\n          col  = texture2D( previousEffect, vUv0 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.0,   0.4  ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.15,  0.37 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.29,  0.29 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.37,  0.15 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.40,  0.0  ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.37, -0.15 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.29, -0.29 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.15, -0.37 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.0,  -0.4  ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.15,  0.37 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.29,  0.29 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.37,  0.15 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.4,   0.0  ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.37, -0.15 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.29, -0.29 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.15, -0.37 ) * aspectCorrect ) * dofblur );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.15,  0.37 ) * aspectCorrect ) * dofblur9 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.37,  0.15 ) * aspectCorrect ) * dofblur9 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.37, -0.15 ) * aspectCorrect ) * dofblur9 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.15, -0.37 ) * aspectCorrect ) * dofblur9 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.15,  0.37 ) * aspectCorrect ) * dofblur9 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.37,  0.15 ) * aspectCorrect ) * dofblur9 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.37, -0.15 ) * aspectCorrect ) * dofblur9 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.15, -0.37 ) * aspectCorrect ) * dofblur9 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.29,  0.29 ) * aspectCorrect ) * dofblur7 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.40,  0.0  ) * aspectCorrect ) * dofblur7 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.29, -0.29 ) * aspectCorrect ) * dofblur7 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.0,  -0.4  ) * aspectCorrect ) * dofblur7 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.29,  0.29 ) * aspectCorrect ) * dofblur7 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.4,   0.0  ) * aspectCorrect ) * dofblur7 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.29, -0.29 ) * aspectCorrect ) * dofblur7 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.0,   0.4  ) * aspectCorrect ) * dofblur7 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.29,  0.29 ) * aspectCorrect ) * dofblur4 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.4,   0.0  ) * aspectCorrect ) * dofblur4 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.29, -0.29 ) * aspectCorrect ) * dofblur4 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.0,  -0.4  ) * aspectCorrect ) * dofblur4 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.29,  0.29 ) * aspectCorrect ) * dofblur4 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.4,   0.0  ) * aspectCorrect ) * dofblur4 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2( -0.29, -0.29 ) * aspectCorrect ) * dofblur4 );\r\n          col += texture2D( previousEffect, vUv0 + ( vec2(  0.0,   0.4  ) * aspectCorrect ) * dofblur4 );\r\n\r\n          gl_FragColor = col / 41.0;\r\n        }else{\r\n          if (factor < 0.0) {\r\n            gl_FragColor = factor  * -vec4(1.0, 1.0, 1.0, 1.0);\r\n          }else{\r\n            gl_FragColor = vec4(factor,factor,factor,1.0);\r\n          }          \r\n        }\r\n      }    \r\n    `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassDof.ID = "PassDof";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtZWZmZWN0LWRvZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZmZlY3RzL2VybWlzLWVmZmVjdC1kb2YudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1REFLOEI7QUFDOUIsbURBQStDO0FBRS9DLE1BQXFCLGNBQWUsU0FBUSwwQkFBVztJQTRFckQsWUFBWSxJQUFZLEVBQUUsUUFBNkI7UUFDckQsS0FBSyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV0QixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFlBQVksQ0FBQyxHQUFHLFlBQVksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVNLFdBQVc7UUFDaEIsT0FBTyxjQUFjLENBQUMsY0FBYyxDQUFDO0lBQ3ZDLENBQUM7O0FBckZILGlDQXNGQztBQXJGUSxpQkFBRSxHQUFXLFdBQVcsQ0FBQztBQUV6Qiw2QkFBYyxHQUFvQjtJQUN2QztRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsS0FBSyxFQUFFLFVBQVU7UUFDakIsV0FBVyxFQUFFLHlDQUF5QztRQUN0RCxRQUFRLEVBQUUsSUFBSTtRQUNkLE9BQU8sRUFBRSxDQUFDO1FBQ1YsR0FBRyxFQUFFLENBQUM7UUFDTixHQUFHLEVBQUUsQ0FBQztRQUNOLFNBQVMsRUFBRSxDQUFDO0tBQ2I7SUFDRDtRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsS0FBSyxFQUFFLFVBQVU7UUFDakIsV0FBVyxFQUNULHNIQUFzSDtRQUN4SCxRQUFRLEVBQUUsSUFBSTtRQUNkLE9BQU8sRUFBRSxLQUFLO1FBQ2QsR0FBRyxFQUFFLENBQUM7UUFDTixHQUFHLEVBQUUsR0FBRztRQUNSLFNBQVMsRUFBRSxDQUFDO0tBQ2I7SUFDRDtRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxXQUFXLEVBQ1Qsa0ZBQWtGO1FBQ3BGLFFBQVEsRUFBRSxJQUFJO1FBQ2QsT0FBTyxFQUFFLEVBQUU7UUFDWCxHQUFHLEVBQUUsSUFBSTtRQUNULEdBQUcsRUFBRSxHQUFHO1FBQ1IsU0FBUyxFQUFFLENBQUM7S0FDYjtJQUNEO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsVUFBVTtRQUNoQixLQUFLLEVBQUUsT0FBTztRQUNkLFdBQVcsRUFDVCx5RUFBeUU7UUFDM0UsUUFBUSxFQUFFLElBQUk7UUFDZCxPQUFPLEVBQUUsRUFBRTtRQUNYLEdBQUcsRUFBRSxJQUFJO1FBQ1QsR0FBRyxFQUFFLElBQUk7UUFDVCxTQUFTLEVBQUUsQ0FBQztLQUNiO0lBQ0Q7UUFDRSxJQUFJLEVBQUUsOEJBQWUsQ0FBQyxLQUFLO1FBQzNCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLElBQUksRUFBRSxXQUFXO1FBQ2pCLEtBQUssRUFBRSxRQUFRO1FBQ2YsV0FBVyxFQUFFLG1EQUFtRDtRQUNoRSxPQUFPLEVBQUUsQ0FBQztRQUNWLFFBQVEsRUFBRSxJQUFJO0tBQ2Y7SUFDRDtRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFNBQVM7UUFDakIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxXQUFXLEVBQ1QsaUVBQWlFO1FBQ25FLE9BQU8sRUFBRSxLQUFLO1FBQ2QsUUFBUSxFQUFFLElBQUk7S0FDZjtDQUNGLENBQUM7QUFjSixNQUFNLFlBQWEsU0FBUSxzQkFBUztJQUtsQyxZQUFZLElBQVk7UUFDdEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2QsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFjLElBQVMsQ0FBQztJQUU5QixLQUFLLENBQUMsS0FBYztRQUNsQixJQUFJLE1BQU0sR0FBRzs7OztLQUlaLENBQUM7UUFDRixJQUFJLEtBQUssS0FBSyxLQUFLLEVBQUU7WUFDbkIsTUFBTSxHQUFHOztPQUVSLENBQUM7U0FDSDtRQUVELE1BQU0sTUFBTSxHQUFHOzs7Ozs7O1VBT1QsTUFBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBK0RYLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDOztBQTlGTSxlQUFFLEdBQVcsU0FBUyxDQUFDIn0=\n\n//# sourceURL=webpack:///./src/effects/ermis-effect-dof.ts?')
  },
  "./src/effects/ermis-effect-filmic.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_1 = __webpack_require__(/*! ../core/ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst ermis_pass_1 = __webpack_require__(/*! ../core/ermis-pass */ "./src/core/ermis-pass.ts");\r\nclass ErmisEffectFilmic extends ermis_effect_1.ErmisEffect {\r\n    constructor(name, settings) {\r\n        super(name, settings);\r\n        this.passes = [];\r\n        this.passes.push(new ErmisPassFilmic(`${ErmisPassFilmic.ID}`));\r\n    }\r\n    getUniforms() {\r\n        return ErmisEffectFilmic.EffectUniforms;\r\n    }\r\n}\r\nexports.default = ErmisEffectFilmic;\r\nErmisEffectFilmic.ID = "EffectFilmic";\r\nErmisEffectFilmic.EffectUniforms = [\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        define: true,\r\n        name: "filmicVignette",\r\n        title: "Vignette",\r\n        description: "If checked vignette will be enabled.",\r\n        inEditor: true,\r\n        default: true\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "filmicVignetteOffset",\r\n        title: "Vignette Offset",\r\n        description: "The offset from the corner that vignette will have.",\r\n        inEditor: true,\r\n        default: 1.2,\r\n        min: 0,\r\n        precision: 5\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "filmicVignetteDarkness",\r\n        title: "Vignette Darkness",\r\n        description: "The amount of vignette applied.",\r\n        inEditor: true,\r\n        default: 1,\r\n        min: 0,\r\n        precision: 5\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.vec3,\r\n        pcType: "rgb",\r\n        name: "filmicVignetteColor",\r\n        inEditor: true,\r\n        title: "Color",\r\n        description: "The color of the vignette effect.",\r\n        default: [0, 0, 0]\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        define: true,\r\n        name: "filmicAberration",\r\n        title: "Chromatic Aberration",\r\n        description: "If checked chromatic aberration will be enabled.",\r\n        inEditor: true,\r\n        default: true\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "filmicAberrationAmount",\r\n        title: "Chr. Aberration Amount",\r\n        description: "The amount of chromatic aberration applied.",\r\n        inEditor: true,\r\n        default: 10,\r\n        min: -100,\r\n        max: 100,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        define: true,\r\n        name: "filmicAberrationAnimated",\r\n        title: "Chr. Aberration Animated",\r\n        description: "If checked the chromatic aberration will be animated using a shaking tween.",\r\n        inEditor: true,\r\n        default: false\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        define: true,\r\n        name: "filmicSharpen",\r\n        title: "Sharpen",\r\n        description: "If checked sharpen will be enabled. It can\'t be used together with Pixelate.",\r\n        inEditor: true,\r\n        default: false\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "filmicSharpenAmount",\r\n        title: "Sharpen Amount",\r\n        description: "The amount of sharpen applied.",\r\n        inEditor: true,\r\n        default: 1,\r\n        min: 0,\r\n        max: 10,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        define: true,\r\n        name: "filmicGrain",\r\n        title: "Film Grain",\r\n        description: "If checked film grain and noise will be added.",\r\n        inEditor: true,\r\n        default: false\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "filmicGrainAmount",\r\n        title: "Grain Amount",\r\n        description: "The amount of film grain applied.",\r\n        inEditor: true,\r\n        default: 1.5,\r\n        min: 0,\r\n        max: 10,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        define: true,\r\n        name: "filmicPixelate",\r\n        title: "Pixelate",\r\n        description: "If checked pixelate will be enabled. It can\'t be used together with Sharpen.",\r\n        inEditor: true,\r\n        default: false\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "filmicPixelateSize",\r\n        title: "Pixel Size",\r\n        description: "The size of each pixel.",\r\n        inEditor: true,\r\n        default: 12,\r\n        min: 1,\r\n        max: 64,\r\n        precision: 0\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        define: true,\r\n        name: "filmicGrayscale",\r\n        title: "Grayscale",\r\n        description: "If checked the final image will be converted to grayscale.",\r\n        inEditor: true,\r\n        default: false\r\n    }\r\n];\r\nclass ErmisPassFilmic extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        const shader = `\r\n        uniform sampler2D previousEffect;\r\n  \r\n        void main() {\r\n  \r\n            vec4 diffuse = texture2D( previousEffect, vUv0 );\r\n            gl_FragColor = diffuse;\r\n\r\n            vec2 texel = 1.0 / resolution.xy;\r\n            vec2 coords = (vUv0 - 0.5) * 2.0;\r\n            float coordDot = dot (coords, coords);            \r\n\r\n            #if (FILMICSHARPEN==1)\r\n\r\n                vec4 edgeDetection = texture2D(previousEffect, vUv0 + texel * vec2(0.0, -1.0)) +\r\n                    texture2D(previousEffect, vUv0 + texel * vec2(-1.0, 0.0)) +\r\n                    texture2D(previousEffect, vUv0 + texel * vec2(1.0, 0.0)) +\r\n                    texture2D(previousEffect, vUv0 + texel * vec2(0.0, 1.0)) -\r\n                    diffuse * 4.0;\r\n                \r\n                gl_FragColor = max(vec4(diffuse.rgb * 1.0, diffuse.a) - (filmicSharpenAmount * vec4(edgeDetection.rgb, 0)), 0.);\r\n\r\n            #endif\r\n\r\n            #if (FILMICPIXELATE==1)\r\n                vec2 pixelateDxy = filmicPixelateSize / resolution;\r\n                vec2 pixelateCoord = pixelateDxy * floor( vUv0 / pixelateDxy );\r\n                gl_FragColor = texture2D(previousEffect, pixelateCoord);\r\n            #endif            \r\n\r\n            #if (FILMICABERRATION==1)\r\n\r\n                float aberrationAmount = 1.0;\r\n    \r\n                #if (FILMICABERRATIONANIMATED==1)\r\n                    aberrationAmount = (1.0 + sin(time*6.0)) * 0.5;\r\n                    aberrationAmount *= 1.0 + sin(time*16.0) * 0.5;\r\n                    aberrationAmount *= 1.0 + sin(time*19.0) * 0.5;\r\n                    aberrationAmount *= 1.0 + sin(time*27.0) * 0.5;\r\n                    aberrationAmount = pow(aberrationAmount, 3.0);\r\n                #endif\r\n            \r\n                aberrationAmount *= filmicAberrationAmount;\r\n                \r\n                vec2 aberrationPrecompute = aberrationAmount * coordDot * coords;\r\n                vec2 uvR = vUv0 - texel.xy * aberrationPrecompute;\r\n                vec2 uvB = vUv0 + texel.xy * aberrationPrecompute;\r\n\r\n                gl_FragColor.r = texture2D(previousEffect, uvR).r;\r\n                gl_FragColor.b = texture2D(previousEffect, uvB).b;\r\n\r\n            #endif\r\n\r\n            #if (FILMICGRAIN==1)\r\n                \r\n                float x = (vUv0.x + 4.0 ) * (vUv0.y + 4.0 ) * (time * 10.0);\r\n                vec4 grain = vec4(mod((mod(x, 13.0) + 1.0) * (mod(x, 123.0) + 1.0), 0.01)-0.005) * filmicGrainAmount * 10.0;\r\n                \r\n                gl_FragColor += grain;\r\n            #endif\r\n\r\n            #if (FILMICVIGNETTE==1)\r\n                vec2 vignetteUv = (vUv0 - vec2(0.5)) * vec2(filmicVignetteOffset);\r\n                gl_FragColor = vec4(mix(gl_FragColor.rgb, vec3(1.0 - filmicVignetteDarkness) + filmicVignetteColor, dot(vignetteUv, vignetteUv)), gl_FragColor.a);\r\n            #endif\r\n\r\n            #if (FILMICGRAYSCALE==1)\r\n                float gray = dot(gl_FragColor.rgb, vec3(0.299, 0.587, 0.114));\r\n                gl_FragColor = vec4(vec3(gray), 1.0);            \r\n            #endif\r\n        }    \r\n      `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassFilmic.ID = "PassFilmic";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtZWZmZWN0LWZpbG1pYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZmZlY3RzL2VybWlzLWVmZmVjdC1maWxtaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1REFLOEI7QUFDOUIsbURBQStDO0FBRS9DLE1BQXFCLGlCQUFrQixTQUFRLDBCQUFXO0lBOEp4RCxZQUFZLElBQVksRUFBRSxRQUE2QjtRQUNyRCxLQUFLLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRXRCLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksZUFBZSxDQUFDLEdBQUcsZUFBZSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBRU0sV0FBVztRQUNoQixPQUFPLGlCQUFpQixDQUFDLGNBQWMsQ0FBQztJQUMxQyxDQUFDOztBQXZLSCxvQ0F3S0M7QUF2S1Esb0JBQUUsR0FBVyxjQUFjLENBQUM7QUFFNUIsZ0NBQWMsR0FBb0I7SUFDdkM7UUFDRSxJQUFJLEVBQUUsOEJBQWUsQ0FBQyxLQUFLO1FBQzNCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE1BQU0sRUFBRSxJQUFJO1FBQ1osSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixLQUFLLEVBQUUsVUFBVTtRQUNqQixXQUFXLEVBQUUsc0NBQXNDO1FBQ25ELFFBQVEsRUFBRSxJQUFJO1FBQ2QsT0FBTyxFQUFFLElBQUk7S0FDZDtJQUNEO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLEtBQUssRUFBRSxpQkFBaUI7UUFDeEIsV0FBVyxFQUFFLHFEQUFxRDtRQUNsRSxRQUFRLEVBQUUsSUFBSTtRQUNkLE9BQU8sRUFBRSxHQUFHO1FBQ1osR0FBRyxFQUFFLENBQUM7UUFDTixT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\n\n//# sourceURL=webpack:///./src/effects/ermis-effect-filmic.ts?')
  },
  "./src/effects/ermis-effect-godrays.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_1 = __webpack_require__(/*! ../core/ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst ermis_pass_1 = __webpack_require__(/*! ../core/ermis-pass */ "./src/core/ermis-pass.ts");\r\nclass ErmisEffectGodrays extends ermis_effect_1.ErmisEffect {\r\n    constructor(name, settings) {\r\n        super(name, settings);\r\n        this.passes = [];\r\n        this.passes.push(new ErmisPassGodraysLight(ErmisPassGodraysLight.ID));\r\n        this.passes.push(new ErmisPassGodrays(ErmisPassGodrays.ID, ErmisPassGodraysLight.ID));\r\n    }\r\n    getUniforms() {\r\n        return ErmisEffectGodrays.EffectUniforms;\r\n    }\r\n}\r\nexports.default = ErmisEffectGodrays;\r\nErmisEffectGodrays.ID = "EffectGodrays";\r\nErmisEffectGodrays.vec = new pc.Vec3();\r\nErmisEffectGodrays.resolution = [0, 0];\r\nErmisEffectGodrays.lightScreenPos = [0, 0, 0];\r\nErmisEffectGodrays.EffectUniforms = [\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.vec4,\r\n        pcType: "entity",\r\n        name: "godLightPosition",\r\n        inEditor: true,\r\n        title: "Light Emitter",\r\n        description: "Drag and drop any entity (not necessarily a light), its world position will be used to calculate the center of the effect on screen.",\r\n        calcValue: (entity, app, camera) => {\r\n            const lightScreenPos = ErmisEffectGodrays.lightScreenPos;\r\n            if (!entity)\r\n                return lightScreenPos;\r\n            const device = app.graphicsDevice;\r\n            const lightPos = entity.getPosition();\r\n            const vec = ErmisEffectGodrays.vec;\r\n            const resolution = ErmisEffectGodrays.resolution;\r\n            resolution[0] = device.width / window.devicePixelRatio;\r\n            resolution[1] = device.height / window.devicePixelRatio;\r\n            camera.camera.worldToScreen(lightPos, vec);\r\n            lightScreenPos[0] = vec.x / resolution[0];\r\n            lightScreenPos[1] = 1.0 - vec.y / resolution[1];\r\n            lightScreenPos[2] = vec.z > 0 ? 1.0 : 0.0;\r\n            lightScreenPos[3] = window.devicePixelRatio;\r\n            return lightScreenPos;\r\n        }\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "godQuality",\r\n        inEditor: true,\r\n        define: true,\r\n        title: "Quality",\r\n        description: "Three presets for quality are available from Low to High, better quality with the cost in performance.",\r\n        default: 2,\r\n        enum: [{ Low: 0 }, { Medium: 1 }, { High: 2 }],\r\n        calcValue: (value) => {\r\n            return value.toFixed(0);\r\n        }\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "godIntensity",\r\n        inEditor: true,\r\n        title: "Intensity",\r\n        description: "The intensity of the light accumulated in the center of the effect.",\r\n        default: 2.0,\r\n        min: 0.01,\r\n        max: 3,\r\n        precision: 2,\r\n        calcValue: (value) => {\r\n            const from1 = 0.01;\r\n            const to1 = 2.0;\r\n            const from2 = 0.5;\r\n            const to2 = 1.2;\r\n            return ((value - from1) / (to1 - from1)) * (to2 - from2) + from2;\r\n        }\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "godWeight",\r\n        inEditor: true,\r\n        title: "Weight",\r\n        description: "Determines the outer rim of the light on the center of the effect.",\r\n        default: 0.43,\r\n        min: 0,\r\n        max: 1,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "godDecay",\r\n        inEditor: true,\r\n        title: "Decay",\r\n        description: "Determines how fast the rays will decay from the light source.",\r\n        default: 0.024,\r\n        min: 0,\r\n        max: 0.05,\r\n        precision: 3,\r\n        calcValue: (value) => {\r\n            return 1.0 - value;\r\n        }\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "godExposure",\r\n        inEditor: true,\r\n        title: "Exposure",\r\n        description: "A multiplier to increase exponentially the amount of light calculated.",\r\n        default: 0.3,\r\n        min: 0,\r\n        max: 1,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.vec3,\r\n        pcType: "rgb",\r\n        name: "godColor",\r\n        inEditor: true,\r\n        title: "Color",\r\n        description: "The color of the light source.",\r\n        default: [0.835, 0.812, 0.318]\r\n    }\r\n];\r\nclass ErmisPassGodraysLight extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        return `\r\n    float sun( vec2 uv, vec2 p ){\r\n        float di = distance(uv, p) * godLightPosition.w;\r\n        return (di <= .3333 / godWeight ? sqrt(1. - di*3./ godWeight) : 0.);\r\n    }\r\n\r\n    float readScreenDepth(vec2 uv) {\r\n      #ifdef GL2\r\n        return linearizeDepth(texture2D(uDepthMap, uv).r);\r\n      #else\r\n        return unpackFloat(texture2D(uDepthMap, uv));\r\n      #endif\r\n    }          \r\n\r\n    void main() {\r\n\r\n      vec2 uv = vUv0.xy;\r\n\r\n      // sun size and position\r\n      float aspect = resolution.x / resolution.y;\r\n      vec2 coords = uv;\r\n      coords.x *= aspect;\r\n\r\n      vec2 sunPos = godLightPosition.xy;\r\n      sunPos.x *= aspect;\r\n      float light = sun(coords, sunPos);\r\n\r\n      // get occluders\r\n      float depth = 1.0 - readScreenDepth(uv);\r\n      float occluders = min(depth, 1.);\r\n\r\n      float col = max( (light - occluders) * godIntensity, 0.);\r\n\r\n      gl_FragColor = vec4(col * godLightPosition.z,occluders,0.0,0.0);\r\n    }    \r\n    `;\r\n    }\r\n}\r\nErmisPassGodraysLight.ID = "PassGodraysLight";\r\nclass ErmisPassGodrays extends ermis_pass_1.ErmisPass {\r\n    constructor(name, inputMapName) {\r\n        super(name);\r\n        this.inputMapName = inputMapName;\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        return `\r\n    uniform sampler2D previousEffect;\r\n    uniform sampler2D ${this.inputMapName};\r\n\r\n    #define DITHER\t\t\t//Dithering toggle\r\n    #if (GODQUALITY==2)\r\n     #define SAMPLES\t64\r\n     #define DENSITY\t.97\r\n     #define WEIGHT\t\t.25\r\n    #else\r\n    #if (GODQUALITY==1)\r\n     #define SAMPLES\t32\r\n     #define DENSITY\t.95\r\n     #define WEIGHT\t\t.25\r\n    #else\r\n     #define SAMPLES\t16\r\n     #define DENSITY\t.93\r\n     #define WEIGHT\t\t.36\r\n    #endif\r\n    #endif\r\n    \r\n\r\n    void main() {\r\n\r\n        vec2 uv = vUv0.xy;\r\n        vec2 coord = uv;        \r\n        vec2 lightPos = godLightPosition.xy;\r\n        \r\n        float occ = texture2D(${this.inputMapName}, uv).x; //light\r\n        float obj = texture2D(${this.inputMapName}, uv).y; //objects\r\n        float dither = rand(uv);\r\n\r\n        vec2 dtc = (coord - lightPos) * (1. / float(SAMPLES) * DENSITY);\r\n        float illumdecay = 1.;\r\n        \r\n        for(int i=0; i<SAMPLES; i++)\r\n        {\r\n            coord -= dtc;\r\n            #ifdef DITHER\r\n              float s = texture2D(${this.inputMapName}, coord+(dtc*dither)).x;\r\n            #else\r\n              float s = texture2D(${this.inputMapName}, coord).x;\r\n            #endif\r\n            s *= illumdecay * WEIGHT;\r\n            occ += s;\r\n            illumdecay *= godDecay;\r\n        }\r\n\r\n        float rays = occ*godExposure * godLightPosition.z;\r\n\r\n        vec4 base = texture2D( previousEffect, vUv0 );\r\n\r\n        vec4 blend = (1.0 - (1.0 - base) * (1.0 - rays * vec4(godColor, 1.0)));\r\n  \r\n        gl_FragColor = blend;\r\n        //gl_FragColor = vec4(rays,rays,rays,1.0);\r\n    }    \r\n    `;\r\n        // Separate the color of the rays from the sun\r\n        // vec3 inputColor = vec3(0., 0., 0.)+occ*EXPOSURE;\r\n        // vec3 rays = min(godColor + inputColor, 1.0) * inputColor;\r\n        // gl_FragColor =  texture2D( previousEffect, vUv0 ) + vec4( mix(rays, -inputColor, godColorNo), 1.0);\r\n    }\r\n}\r\nErmisPassGodrays.ID = "PassGodrays";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtZWZmZWN0LWdvZHJheXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZWZmZWN0cy9lcm1pcy1lZmZlY3QtZ29kcmF5cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVEQUs4QjtBQUM5QixtREFBK0M7QUFFL0MsTUFBcUIsa0JBQW1CLFNBQVEsMEJBQVc7SUFrSXpELFlBQVksSUFBWSxFQUFFLFFBQTZCO1FBQ3JELEtBQUssQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFFdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxxQkFBcUIsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNkLElBQUksZ0JBQWdCLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxFQUFFLHFCQUFxQixDQUFDLEVBQUUsQ0FBQyxDQUNwRSxDQUFDO0lBQ0osQ0FBQztJQUVNLFdBQVc7UUFDaEIsT0FBTyxrQkFBa0IsQ0FBQyxjQUFjLENBQUM7SUFDM0MsQ0FBQzs7QUE5SUgscUNBK0lDO0FBOUlRLHFCQUFFLEdBQVcsZUFBZSxDQUFDO0FBRTdCLHNCQUFHLEdBQVksSUFBSSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDN0IsNkJBQVUsR0FBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUM5QixpQ0FBYyxHQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUVyQyxpQ0FBYyxHQUFvQjtJQUN2QztRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLElBQUk7UUFDMUIsTUFBTSxFQUFFLFFBQVE7UUFDaEIsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixRQUFRLEVBQUUsSUFBSTtRQUNkLEtBQUssRUFBRSxlQUFlO1FBQ3RCLFdB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\n\n//# sourceURL=webpack:///./src/effects/ermis-effect-godrays.ts?')
  },
  "./src/effects/ermis-effect-motionBlur.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_1 = __webpack_require__(/*! ../core/ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst ermis_pass_1 = __webpack_require__(/*! ../core/ermis-pass */ "./src/core/ermis-pass.ts");\r\nclass ErmisEffectMotionBlur extends ermis_effect_1.ErmisEffect {\r\n    constructor(name, settings) {\r\n        super(name, settings);\r\n        this.passes = [];\r\n        this.passes.push(new ErmisPassMotionBlur(ErmisPassMotionBlur.ID));\r\n    }\r\n    getUniforms() {\r\n        return ErmisEffectMotionBlur.EffectUniforms;\r\n    }\r\n}\r\nexports.default = ErmisEffectMotionBlur;\r\nErmisEffectMotionBlur.ID = "EffectMotionBlur";\r\nErmisEffectMotionBlur.EffectUniforms = [\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "motionBlurSamples",\r\n        inEditor: true,\r\n        define: true,\r\n        title: "Samples",\r\n        description: "The number of samples collected per pixel to calculate the total motion blur. Larger values provide better quality but can have a performance hit.",\r\n        default: 32,\r\n        min: 8,\r\n        max: 128,\r\n        precision: 0,\r\n        calcValue: (value) => {\r\n            return value.toFixed(0);\r\n        }\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "motionBlurStrength",\r\n        title: "Strength",\r\n        description: "Determines how intense the calculated motion blurring is.",\r\n        inEditor: true,\r\n        default: 2.0,\r\n        min: 0,\r\n        max: 20,\r\n        precision: 3,\r\n        calcValue: (value) => {\r\n            return value * 0.01;\r\n        }\r\n    }\r\n];\r\nclass ErmisPassMotionBlur extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        const shader = `\r\n        uniform sampler2D previousEffect;\r\n  \r\n        void main() {\r\n\r\n            float depth = getScreenDepth( vUv0 );\r\n            float linearDepth = getLinearScreenDepth( vUv0 );\r\n\r\n            vec4 result = texture2D(previousEffect, vUv0);\r\n\r\n            if( linearDepth < 1.0 ){\r\n                float viewZ = getViewZ(linearDepth, cameraNear, cameraFar);\r\n            \r\n                vec2 currentPos = getViewPosition( vUv0, linearDepth, viewZ, matrix_viewProjection, matrix_viewProjectionInverse ).xy;\r\n                vec2 previousPos = getViewPosition( vUv0, linearDepth, viewZ, matrix_viewProjectionPrevious, matrix_viewProjectionInversePrevious ).xy;\r\n    \r\n                // Use this frame\'s position and last frame\'s to compute the pixel velocity.  \r\n                vec2 velocity = 0.01 * motionBlurStrength * ( currentPos - previousPos ) * .5;\r\n    \r\n                // Calculate the blurring based using the velocity as an offset\r\n                vec2 texelSize = 1.0 / resolution;\r\n                float speed = length(velocity / texelSize);      \r\n\r\n                int samplesCount = int(clamp(speed, 1.0, float(MOTIONBLURSAMPLES)));\r\n    \r\n                velocity = normalize(velocity) * texelSize;\r\n                float hlim = float(-samplesCount) * 0.5 + 0.5;\r\n    \r\n                for( int i = 1; i < MOTIONBLURSAMPLES; ++i ) {\r\n                    \r\n                    if (i >= samplesCount) break;\r\n    \r\n                    vec2 offset = vUv0 + velocity * (hlim + float(i));\r\n                    result += texture2D(previousEffect, offset);\r\n                }\r\n    \r\n                gl_FragColor = result / float(samplesCount);\r\n                \r\n            }else{\r\n\r\n                gl_FragColor = result;\r\n            }\r\n        }    \r\n      `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassMotionBlur.ID = "PassMotionBlur";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtZWZmZWN0LW1vdGlvbkJsdXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZWZmZWN0cy9lcm1pcy1lZmZlY3QtbW90aW9uQmx1ci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVEQUs4QjtBQUM5QixtREFBK0M7QUFFL0MsTUFBcUIscUJBQXNCLFNBQVEsMEJBQVc7SUFzQzVELFlBQVksSUFBWSxFQUFFLFFBQTZCO1FBQ3JELEtBQUssQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFFdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxtQkFBbUIsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFTSxXQUFXO1FBQ2hCLE9BQU8scUJBQXFCLENBQUMsY0FBYyxDQUFDO0lBQzlDLENBQUM7O0FBL0NILHdDQWdEQztBQS9DUSx3QkFBRSxHQUFXLGtCQUFrQixDQUFDO0FBRWhDLG9DQUFjLEdBQW9CO0lBQ3ZDO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLFFBQVEsRUFBRSxJQUFJO1FBQ2QsTUFBTSxFQUFFLElBQUk7UUFDWixLQUFLLEVBQUUsU0FBUztRQUNoQixXQUFXLEVBQ1Qsb0pBQW9KO1FBQ3RKLE9BQU8sRUFBRSxFQUFFO1FBQ1gsR0FBRyxFQUFFLENBQUM7UUFDTixHQUFHLEVBQUUsR0FBRztRQUNSLFNBQVMsRUFBRSxDQUFDO1FBQ1osU0FBUyxFQUFFLENBQUMsS0FBYSxFQUFFLEVBQUU7WUFDM0IsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzFCLENBQUM7S0FDRjtJQUNEO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsb0JBQW9CO1FBQzFCLEtBQUssRUFBRSxVQUFVO1FBQ2pCLFdBQVcsRUFBRSwyREFBMkQ7UUFDeEUsUUFBUSxFQUFFLElBQUk7UUFDZCxPQUFPLEVBQUUsR0FBRztRQUNaLEdBQUcsRUFBRSxDQUFDO1FBQ04sR0FBRyxFQUFFLEVBQUU7UUFDUCxTQUFTLEVBQUUsQ0FBQztRQUNaLFNBQVMsRUFBRSxDQUFDLEtBQWEsRUFBRSxFQUFFO1lBQzNCLE9BQU8sS0FBSyxHQUFHLElBQUksQ0FBQztRQUN0QixDQUFDO0tBQ0Y7Q0FDRixDQUFDO0FBY0osTUFBTSxtQkFBb0IsU0FBUSxzQkFBUztJQUt6QyxZQUFZLElBQVk7UUFDdEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2QsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFjLElBQVMsQ0FBQztJQUU5QixLQUFLLENBQUMsS0FBYztRQUNsQixNQUFNLE1BQU0sR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQTJDWixDQUFDO1FBQ0osT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7QUF4RE0sc0JBQUUsR0FBVyxnQkFBZ0IsQ0FBQyJ9\n\n//# sourceURL=webpack:///./src/effects/ermis-effect-motionBlur.ts?')
  },
  "./src/effects/ermis-effect-sao.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_1 = __webpack_require__(/*! ../core/ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst ermis_pass_1 = __webpack_require__(/*! ../core/ermis-pass */ "./src/core/ermis-pass.ts");\r\nclass ErmisEffectSAO extends ermis_effect_1.ErmisEffect {\r\n    constructor(name, settings) {\r\n        super(name, settings);\r\n        this.passes = [];\r\n        this.passes.push(new ErmisPassSAO(ErmisPassSAO.ID));\r\n        this.passes.push(new ErmisPassSAOBlur(ErmisPassSAOBlur.ID));\r\n    }\r\n    getUniforms() {\r\n        return ErmisEffectSAO.EffectUniforms;\r\n    }\r\n}\r\nexports.default = ErmisEffectSAO;\r\nErmisEffectSAO.ID = "EffectSAO";\r\nErmisEffectSAO.EffectUniforms = [\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoFar",\r\n        title: "Far",\r\n        description: "A ratio of how fast from the camera the effect fades out, larger values render the effect in greater view distances but in lower quality due to smaller precision.",\r\n        inEditor: true,\r\n        default: 1.0,\r\n        min: 0,\r\n        max: 2,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoSamples",\r\n        inEditor: true,\r\n        define: true,\r\n        title: "Samples",\r\n        description: "The number of samples collected per pixel to calculate the total occlusion. Larger values provide better quality but can have a performance hit.",\r\n        default: 12,\r\n        min: 1,\r\n        max: 32,\r\n        precision: 0,\r\n        calcValue: (value) => {\r\n            return value.toFixed(0);\r\n        }\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoIntensity",\r\n        title: "Intensity",\r\n        description: "Determines how dark the calculated occlusion is rendered.",\r\n        inEditor: true,\r\n        default: 1.5,\r\n        min: 0,\r\n        max: 3,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoScale",\r\n        title: "Scale",\r\n        description: "Determines how far from the world position of the pixel occlusion sample points will be collected.",\r\n        inEditor: true,\r\n        default: 0.5,\r\n        min: 0,\r\n        max: 1,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoBias",\r\n        title: "Bias",\r\n        description: "A ratio that discards any sample point that falls in that range used to decrease artifacts on edges. The value should be visually estimated depending on the rendered models.",\r\n        inEditor: true,\r\n        default: 0.25,\r\n        min: 0.01,\r\n        max: 2,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoKernelRadius",\r\n        title: "Kernel Radius",\r\n        description: "Determines the radius of the occlusion effect around a pixel.",\r\n        inEditor: true,\r\n        default: 25,\r\n        min: 1,\r\n        max: 150,\r\n        precision: 0\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoRangeThreshold",\r\n        title: "Range Threshold",\r\n        inEditor: false,\r\n        default: 0.0015,\r\n        min: 0.0,\r\n        max: 0.01,\r\n        precision: 4\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoRangeFalloff",\r\n        title: "Range Falloff",\r\n        inEditor: false,\r\n        default: 0.01,\r\n        min: 0.0,\r\n        max: 0.1,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "saoBlurRadius",\r\n        title: "Blur Radius",\r\n        description: "Blurs within the given radius the collected occlusion points to render a final smooth shadow.",\r\n        inEditor: true,\r\n        default: 0.75,\r\n        min: 0.01,\r\n        max: 2,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "boolean",\r\n        name: "saoDebug",\r\n        title: "Debug",\r\n        description: "Ideal to check how the effect is rendered and adjust the parameters.",\r\n        default: false,\r\n        inEditor: true\r\n    }\r\n];\r\nclass ErmisPassSAO extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n    getVersionES(isGL2) {\r\n        return ErmisPassSAO.ES;\r\n    }\r\n    getExtensions(isGL2) {\r\n        if (isGL2 === false) {\r\n            return "#extension GL_OES_standard_derivatives : enable";\r\n        }\r\n        else {\r\n            return "";\r\n        }\r\n    }\r\n    getVS(isGL2) {\r\n        if (isGL2 === true && ErmisPassSAO.ES === 3) {\r\n            return `#version 300 es\r\n        in vec4 aPosition;\r\n \r\n        out vec2 vUv0;\r\n        \r\n        void main(void){\r\n            gl_Position = vec4(aPosition.xy, 0.0, 1.0);\r\n            vUv0 = (aPosition.xy + 1.0) * 0.5;\r\n        }`;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    getPS(isGL2) {\r\n        let uniforms = `\r\n        #define NUM_RINGS 7\r\n    `;\r\n        let methods = "";\r\n        const out = isGL2 === true && ErmisPassSAO.ES === 3 ? "out vec4 fragColor;" : "";\r\n        const outputName = isGL2 === true && ErmisPassSAO.ES === 3 ? "fragColor" : "gl_FragColor";\r\n        methods += `    \r\n        vec3 getViewPositionFromDepth( const in vec2 screenPosition, const in float depth, const in float viewZ ) {                \r\n            #ifdef GL2\r\n              vec4 clipSpaceLocation;\r\n              clipSpaceLocation.xy = screenPosition * 2.0 - 1.0;\r\n              clipSpaceLocation.z = depth;\r\n              clipSpaceLocation.w = 1.0;\r\n              vec4 homogenousLocation = matrix_viewProjectionInverse * clipSpaceLocation;\r\n              return homogenousLocation.xyz / homogenousLocation.w;\r\n            #else                        \r\n              float clipW = matrix_viewProjection[2][3] * viewZ + matrix_viewProjection[3][3];\r\n              vec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );\r\n              clipPosition *= clipW;\r\n        \r\n              return ( matrix_viewProjectionInverse * clipPosition ).xyz;\r\n            #endif\r\n        }\r\n\r\n        vec3 getViewNormal( const in vec3 viewPosition ){\r\n            return normalize( cross( dFdx( viewPosition ), dFdy( viewPosition ) ) );      \r\n        }\r\n    \r\n        float getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {\r\n          vec3 viewDelta = sampleViewPosition - centerViewPosition;\r\n          float viewDistance = length( viewDelta ) * saoScale;\r\n\r\n          return max(0.0, (dot(centerViewNormal, viewDelta) ) / viewDistance - saoBias) / (1.0 + pow2( viewDistance ) );\r\n        }\r\n\r\n        const float ANGLE_STEP = PI2 * float( NUM_RINGS ) / float( SAOSAMPLES );\r\n        const float INV_SAOSAMPLES = 1.0 / float( SAOSAMPLES );\r\n\r\n        float getAmbientOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in float depth ) {\r\n\r\n            float angle = rand( vUv0 ) * PI2;\r\n            vec2 radius = vec2( saoKernelRadius * INV_SAOSAMPLES ) / resolution;\r\n            vec2 radiusStep = radius;\r\n            \r\n            float occlusionSum = 0.0;\r\n            float weightSum = 0.0;\r\n\r\n            vec2 proximityCutoff = vec2(saoRangeThreshold, min(saoRangeThreshold + saoRangeFalloff, 1.0 - 1e-6));\r\n            \r\n            for( int i = 0; i < SAOSAMPLES; i ++ ) {\r\n                vec2 sampleUv = vUv0 + vec2( cos( angle ), sin( angle ) ) * radius;\r\n                radius += radiusStep;\r\n                angle += ANGLE_STEP;\r\n\r\n                float sampleDepth = getScreenDepth( sampleUv );\r\n                if( sampleDepth >= ( 1.0 - EPSILON ) ) {\r\n                  continue;\r\n                }\r\n\r\n                float proximity = abs(depth - sampleDepth);\r\n\r\n                float sampleViewZ = getViewZ( sampleDepth, cameraNear, cameraFar );\r\n                vec3 sampleViewPosition = getViewPositionFromDepth( sampleUv, sampleDepth, sampleViewZ );                \r\n                float falloff = 1.0 - smoothstep(proximityCutoff.x, proximityCutoff.y, proximity);                  \r\n\r\n                occlusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition ) * falloff;\r\n                weightSum += 1.0;                  \r\n            }\r\n\r\n            if( weightSum == 0.0 ) return 0.0;\r\n            return occlusionSum * ( saoIntensity / weightSum );\r\n        }       \r\n      `;\r\n        const shader = `\r\n      ${uniforms}\r\n\r\n      ${methods}\r\n\r\n      ${out}\r\n\r\n      void main(void) {\r\n\r\n        float linearDepth = getLinearScreenDepth( vUv0 );\r\n        float depth = getScreenDepth( vUv0 );\r\n\r\n        float ambientOcclusion = 1.0;\r\n        \r\n        if( linearDepth < saoFar ){      \r\n          float viewZ = getViewZ(depth, cameraNear, cameraFar);\r\n  \r\n          vec3 viewPosition = getViewPositionFromDepth( vUv0, depth, viewZ );\r\n          vec3 viewNormal = getViewNormal( viewPosition );\r\n\r\n          ambientOcclusion -= getAmbientOcclusion( viewPosition, viewNormal, depth );\r\n        }\r\n\r\n        ${outputName} = vec4( vec3(ambientOcclusion), 1.0);\r\n      }    \r\n    `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassSAO.ID = "PassSAO";\r\nErmisPassSAO.ES = 3;\r\nclass ErmisPassSAOBlur extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n    getVS(isGL2) { }\r\n    getPS(isGL2) {\r\n        let uniforms = `\r\n        uniform sampler2D previousEffect;\r\n        uniform sampler2D PassDepth;\r\n        uniform sampler2D PassSAO;\r\n\r\n        #define EDGE_SHARPNESS 1.0\r\n    `;\r\n        let methods = `            \r\n        float blurAO(vec2 screenSpaceOrigin) {\r\n\r\n          float sum = texture2D(PassSAO, screenSpaceOrigin).x;\r\n          float originDepth = getLinearScreenDepth(screenSpaceOrigin);\r\n\r\n          float totalWeight = 1.0;\r\n          sum *= totalWeight;\r\n\r\n          for (int x = -4; x <= 4; x++) {\r\n              for (int y = -4; y <= 4; y++) {\r\n                  if (x != 0 || y != 0) {\r\n                      vec2 samplePosition = screenSpaceOrigin +\r\n                      vec2(float(x), float(y)) * vec2(1.0/resolution.x, 1.0/resolution.y) * saoBlurRadius;\r\n                      float ao = texture2D(PassSAO, samplePosition).x;\r\n                      float sampleDepth = getLinearScreenDepth( samplePosition );\r\n                      int kx = 4 - (x < 0 ? -x : x);\r\n                      int ky = 4 - (y < 0 ? -y : y);\r\n                      float weight = 0.3 + (abs(float(x * y)) / (25.0 * 25.0));\r\n                      weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(sampleDepth - originDepth));\r\n                      sum += ao * weight;\r\n                      totalWeight += weight;\r\n                  }\r\n              }\r\n          }\r\n          const float epsilon = 0.0001;\r\n          return sum / (totalWeight + epsilon);\r\n        }    \r\n    `;\r\n        const shader = `\r\n      ${uniforms}\r\n\r\n      ${methods}\r\n      \r\n      void main() {\r\n\r\n        float occlusion = blurAO(vUv0);\r\n\r\n        vec4 diffuse = texture2D( previousEffect, vUv0 );        \r\n\r\n        if (saoDebug == 0.0) {\r\n          gl_FragColor = vec4(diffuse.xyz * occlusion, 1.0);\r\n        }else{\r\n          gl_FragColor = vec4(vec3(occlusion), 1.0);\r\n        }\r\n      }    \r\n    `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassSAOBlur.ID = "PassSAOBlur";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtZWZmZWN0LXNhby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZmZlY3RzL2VybWlzLWVmZmVjdC1zYW8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1REFLOEI7QUFDOUIsbURBQStDO0FBRS9DLE1BQXFCLGNBQWUsU0FBUSwwQkFBVztJQW9JckQsWUFBWSxJQUFZLEVBQUUsUUFBNkI7UUFDckQsS0FBSyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV0QixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFlBQVksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVNLFdBQVc7UUFDaEIsT0FBTyxjQUFjLENBQUMsY0FBYyxDQUFDO0lBQ3ZDLENBQUM7O0FBOUlILGlDQStJQztBQTlJUSxpQkFBRSxHQUFXLFdBQVcsQ0FBQztBQUV6Qiw2QkFBYyxHQUFvQjtJQUN2QztRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsSUFBSSxFQUFFLFFBQVE7UUFDZCxLQUFLLEVBQUUsS0FBSztRQUNaLFdBQVcsRUFDVCxvS0FBb0s7UUFDdEssUUFBUSxFQUFFLElBQUk7UUFDZCxPQUFPLEVBQUUsR0FBRztRQUNaLEdBQUcsRUFBRSxDQUFDO1FBQ04sR0FBRyxFQUFFLENBQUM7UUFDTixTQUFTLEVBQUUsQ0FBQztLQUNiO0lBQ0Q7UUFDRSxJQUFJLEVBQUUsOEJBQWUsQ0FBQyxLQUFLO1FBQzNCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLElBQUksRUFBRSxZQUFZO1FBQ2xCLFFBQVEsRUFBRSxJQUFJO1FBQ2QsTUFBTSxFQUFFLElBQUk7UUFDWixLQUFLLEVBQUUsU0FBUztRQUNoQixXQUFXLEVBQ1Qsa0pBQWtKO1FBQ3BKLE9BQU8sRUFBRSxFQUFFO1FBQ1gsR0FBRyxFQUFFLENBQUM7UUFDTixHQUFHLEVBQUUsRUFBRTtRQUNQLFNBQVMsRUFBRSxDQUFDO1FBQ1osU0FBUyxFQUFFLENBQUMsS0FBYSxFQUFFLEVBQUU7WUFDM0IsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzFCLENBQUM7S0FDRjtJQUNEO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsY0FBYztRQUNwQixLQUFLLEVBQUUsV0FBVztRQUNsQixXQUFXLEVBQUUsMkRBQTJEO1FBQ3hFLFFBQVEsRUFBRSxJQUFJO1FBQ2QsT0FBTyxFQUFFLEdBQUc7UUFDWixHQUFHLEVBQUUsQ0FBQztRQUNOLEdBQUcsRUFBRSxDQUFDO1FBQ04sU0FBUyxFQUFFLENBQUM7S0FDYjtJQUNEO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsVUFBVTtRQUNoQixLQUFLLEVBQUUsT0FBTztRQUNkLFdBQVcsRUFDVCxvR0FBb0c7UUFDdEcsUUFBUSxFQUFFLElBQUk7UUFDZCxPQUFPLEVBQUUsR0FBRztRQUNaLEdBQUcsRUFBRSxDQUFDO1FBQ04sR0FBRyxFQUFFLENBQUM7UUFDTixTQUFTLEVBQUUsQ0FBQztLQUNiO0lBQ0Q7UUFDRSxJQUFJLEVBQUUsOEJBQWUsQ0FBQyxLQUFLO1FBQzNCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLElBQUksRUFBRSxTQUFTO1FBQ2YsS0FBSyxFQUFFLE1BQU07UUFDYixXQUFXLEVBQ1QsK0tBQStLO1FBQ2pMLFFBQVEsRUFBRSxJQUFJO1FBQ2QsT0FBTyxFQUFFLElBQUk7UUFDYixHQUFHLEVBQUUsSUFBSTtRQUNULEdBQUcsRUFBRSxDQUFDO1FBQ04sU0FBUyxFQUFFLENBQUM7S0FDYjtJQUNEO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsaUJBQWlCO1FBQ3ZCLEtBQUssRUFBRSxlQUFlO1FBQ3RCLFdBQVcsRUFDVCwrREFBK0Q7UUFDakUsUUFBUSxFQUFFLElBQUk7UUFDZCxPQUFPLEVBQUUsRUFBRTtRQUNYLEdBQUcsRUFBRSxDQUFDO1FBQ04sR0FBRyxFQUFFLEdBQUc7UUFDUixTQUFTLEVBQUUsQ0FBQztLQUNiO0lBQ0Q7UUFDRSxJQUFJLEVBQUUsOEJBQWUsQ0FBQyxLQUFLO1FBQzNCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLElBQUksRUFBRSxtQkFBbUI7UUFDekIsS0FBSyxFQUFFLGlCQUFpQjtRQUN4QixRQUFRLEVBQUUsS0FBSztRQUNmLE9BQU8sRUFBRSxNQUFNO1FBQ2YsR0FBRyxFQUFFLEdBQUc7UUFDUixHQUFHLEVBQUUsSUFBSTtRQUNULFNBQVMsRUFBRSxDQUFDO0tBQ2I7SUFDRDtRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixLQUFLLEVBQUUsZUFBZTtRQUN0QixRQUFRLEVBQUUsS0FBSztRQUNmLE9BQU8sRUFBRSxJQUFJO1FBQ2IsR0FBRyxFQUFFLEdBQUc7UUFDUixHQUFHLEVBQUUsR0FBRztRQUNSLFNBQVMsRUFBRSxDQUFDO0tBQ2I7SUFDRDtRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsSUFBSSxFQUFFLGVBQWU7UUFDckIsS0FBSyxFQUFFLGFBQWE7UUFDcEIsV0FBVyxFQUNULCtGQUErRjtRQUNqRyxRQUFRLEVBQUUsSUFBSTtRQUNkLE9BQU8sRUFBRSxJQUFJO1FBQ2IsR0FBRyxFQUFFLElBQUk7UUFDVCxHQUFHLEVBQUUsQ0FBQztRQUNOLFNBQVMsRUFBRSxDQUFDO0tBQ2I7SUFDRDtRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFNBQVM7UUFDakIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxXQUFXLEVBQ1Qsc0VBQXNFO1FBQ3hFLE9BQU8sRUFBRSxLQUFLO1FBQ2QsUUFBUSxFQUFFLElBQUk7S0FDZjtDQUNGLENBQUM7QUFlSixNQUFNLFlBQWEsU0FBUSxzQkFBUztJQU1sQyxZQUFZLElBQVk7UUFDdEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2QsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFjO1FBQ3pCLE9BQU8sWUFBWSxDQUFDLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUQsYUFBYSxDQUFDLEtBQWM7UUFDMUIsSUFBSSxLQUFLLEtBQUssS0FBSyxFQUFFO1lBQ25CLE9BQU8saURBQWlELENBQUM7U0FDMUQ7YUFBTTtZQUNMLE9BQU8sRUFBRSxDQUFDO1NBQ1g7SUFDSCxDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQWM7UUFDbEIsSUFBSSxLQUFLLEtBQUssSUFBSSxJQUFJLFlBQVksQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUFFO1lBQzNDLE9BQU87Ozs7Ozs7O1VBUUgsQ0FBQztTQUNOO2FBQU07WUFDTCxPQUFPO1NBQ1I7SUFDSCxDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQWM7UUFDbEIsSUFBSSxRQUFRLEdBQUc7O0tBRWQsQ0FBQztRQUNGLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUVqQixNQUFNLEdBQUcsR0FDUCxLQUFLLEtBQUssSUFBSSxJQUFJLFlBQVksQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3ZFLE1BQU0sVUFBVSxHQUNkLEtBQUssS0FBSyxJQUFJLElBQUksWUFBWSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDO1FBRXpFLE9BQU8sSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O09Ba0VSLENBQUM7UUFFSixNQUFNLE1BQU0sR0FBRztRQUNYLFFBQVE7O1FBRVIsT0FBTzs7UUFFUCxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7VUFrQkQsVUFBVTs7S0FFZixDQUFDO1FBRUYsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7QUFoSk0sZUFBRSxHQUFXLFNBQVMsQ0FBQztBQUN2QixlQUFFLEdBQVcsQ0FBQyxDQUFDO0FBa0p4QixNQUFNLGdCQUFpQixTQUFRLHNCQUFTO0lBS3RDLFlBQVksSUFBWTtRQUN0QixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDZCxDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQWMsSUFBUyxDQUFDO0lBRTlCLEtBQUssQ0FBQyxLQUFjO1FBQ2xCLElBQUksUUFBUSxHQUFHOzs7Ozs7S0FNZCxDQUFDO1FBQ0YsSUFBSSxPQUFPLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0E0QmIsQ0FBQztRQUVGLE1BQU0sTUFBTSxHQUFHO1FBQ1gsUUFBUTs7UUFFUixPQUFPOzs7Ozs7Ozs7Ozs7OztLQWNWLENBQUM7UUFFRixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDOztBQXBFTSxtQkFBRSxHQUFXLGFBQWEsQ0FBQyJ9\n\n//# sourceURL=webpack:///./src/effects/ermis-effect-sao.ts?')
  },
  "./src/effects/ermis-effect-ssr.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst ermis_effect_1 = __webpack_require__(/*! ../core/ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst ermis_pass_1 = __webpack_require__(/*! ../core/ermis-pass */ "./src/core/ermis-pass.ts");\r\nclass ErmisEffectSSR extends ermis_effect_1.ErmisEffect {\r\n    constructor(name, settings) {\r\n        super(name, settings);\r\n        this.passes = [];\r\n        this.passes.push(new ErmisPassSSR(ErmisPassSSR.ID));\r\n    }\r\n    getUniforms() {\r\n        return ErmisEffectSSR.EffectUniforms;\r\n    }\r\n}\r\nexports.default = ErmisEffectSSR;\r\nErmisEffectSSR.ID = "EffectSSR";\r\nErmisEffectSSR.EffectUniforms = [\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "ssrSamples",\r\n        inEditor: true,\r\n        define: true,\r\n        title: "Samples",\r\n        description: "The number of samples collected per pixel to calculate the total reflection. Larger values provide better quality but can have a performance hit.",\r\n        default: 64,\r\n        min: 1,\r\n        max: 256,\r\n        precision: 0,\r\n        calcValue: (value) => {\r\n            return value.toFixed(0);\r\n        }\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "ssrSmoothSteps",\r\n        inEditor: true,\r\n        define: true,\r\n        title: "Smooth Steps",\r\n        description: "The number of samples collected to smooth out the reflected value. Larger values provide better quality but can have a performance hit.",\r\n        default: 5,\r\n        min: 1,\r\n        max: 30,\r\n        precision: 0,\r\n        calcValue: (value) => {\r\n            return value.toFixed(0);\r\n        }\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "ssrThreshold",\r\n        title: "Threshold",\r\n        description: "Sets the reflection size.",\r\n        inEditor: true,\r\n        default: 1.2,\r\n        min: 0,\r\n        max: 3,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "ssrStrength",\r\n        title: "Strength",\r\n        description: "Sets the total strength of the rendered reflection.",\r\n        inEditor: true,\r\n        default: 1.0,\r\n        min: 0,\r\n        max: 5.0,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "ssrFalloff",\r\n        title: "Falloff",\r\n        description: "Adjusts how discrete the reflections are.",\r\n        inEditor: true,\r\n        default: 0.25,\r\n        min: 0.01,\r\n        max: 2,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "ssrStep",\r\n        title: "Step",\r\n        description: "Used to set the step used to iterate until the true color of a reflection pixel is found.",\r\n        inEditor: true,\r\n        default: 1.0,\r\n        min: 1,\r\n        max: 3.0,\r\n        precision: 2\r\n    },\r\n    {\r\n        type: ermis_effect_1.ShaderDataTypes.float,\r\n        pcType: "number",\r\n        name: "ssrRoughnessFactor",\r\n        title: "RoughnessFactor",\r\n        inEditor: true,\r\n        default: 0.2,\r\n        min: 0.0,\r\n        max: 1.0,\r\n        precision: 2\r\n    }\r\n];\r\nclass ErmisPassSSR extends ermis_pass_1.ErmisPass {\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n    getVersionES(isGL2) {\r\n        return ErmisPassSSR.ES;\r\n    }\r\n    getExtensions(isGL2) {\r\n        if (isGL2 === false) {\r\n            return "#extension GL_OES_standard_derivatives : enable";\r\n        }\r\n        else {\r\n            return "";\r\n        }\r\n    }\r\n    getVS(isGL2) {\r\n        if (isGL2 === true && ErmisPassSSR.ES === 3) {\r\n            return `#version 300 es\r\n          in vec4 aPosition;\r\n   \r\n          out vec2 vUv0;\r\n          \r\n          void main(void){\r\n              gl_Position = vec4(aPosition.xy, 0.0, 1.0);\r\n              vUv0 = (aPosition.xy + 1.0) * 0.5;\r\n          }`;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    getPS(isGL2) {\r\n        let uniforms = `\r\n          uniform sampler2D previousEffect;\r\n      `;\r\n        let methods = "";\r\n        const out = isGL2 === true && ErmisPassSSR.ES === 3 ? "out vec4 fragColor;" : "";\r\n        const outputName = isGL2 === true && ErmisPassSSR.ES === 3 ? "fragColor" : "gl_FragColor";\r\n        methods += `    \r\n          vec3 getViewPositionFromDepth( const in vec2 screenPosition, const in float depth, const in float viewZ ) {                \r\n              #ifdef GL2\r\n                vec4 clipSpaceLocation;\r\n                clipSpaceLocation.xy = screenPosition * 2.0 - 1.0;\r\n                clipSpaceLocation.z = depth;\r\n                clipSpaceLocation.w = 1.0;\r\n                vec4 homogenousLocation = matrix_viewProjectionInverse * clipSpaceLocation;\r\n                return homogenousLocation.xyz / homogenousLocation.w;\r\n              #else                        \r\n                float clipW = matrix_viewProjection[2][3] * viewZ + matrix_viewProjection[3][3];\r\n                vec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );\r\n                clipPosition *= clipW;\r\n          \r\n                return ( matrix_viewProjectionInverse * clipPosition ).xyz;\r\n              #endif\r\n          }\r\n  \r\n          vec3 getViewNormal( const in vec3 viewPosition ){\r\n              return normalize( cross( dFdx( viewPosition ), dFdy( viewPosition ) ) );      \r\n          }\r\n         \r\n        `;\r\n        const textureMethod = isGL2 === true ? "texture" : "texture2D";\r\n        const shader = `\r\n        ${uniforms}\r\n  \r\n        ${methods}\r\n  \r\n        ${out}\r\n  \r\n        // Structs\r\n        struct ReflectionInfo {\r\n            vec3 color;\r\n            vec4 coords;\r\n        };      \r\n        \r\n        /**\r\n         * According to specular, see https://en.wikipedia.org/wiki/Schlick%27s_approximation\r\n         */\r\n        vec3 fresnelSchlick(float cosTheta, vec3 F0){\r\n            return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);\r\n        }    \r\n\r\n        /**\r\n         * Once the pixel\'s coordinates has been found, let\'s adjust (smooth) a little bit\r\n         * by sampling multiple reflection pixels.\r\n         */\r\n        ReflectionInfo smoothReflectionInfo(vec3 dir, vec3 hitCoord)\r\n        {\r\n            ReflectionInfo info;\r\n            info.color = vec3(0.0);\r\n        \r\n            vec4 projectedCoord;\r\n            float sampledDepth;\r\n        \r\n            for(int i = 0; i < SSRSMOOTHSTEPS; i++)\r\n            {\r\n                projectedCoord = matrix_viewProjection * vec4(hitCoord, 1.0) + matrix_viewProjection[3][3];\r\n                projectedCoord.xy /= projectedCoord.w;\r\n                projectedCoord.xy = 0.5 * projectedCoord.xy + vec2(0.5);\r\n        \r\n                sampledDepth = getScreenDepth( projectedCoord.xy );\r\n        \r\n                float depth = sampledDepth - hitCoord.z;\r\n        \r\n                dir *= 0.5;\r\n                if(depth > 0.0)\r\n                    hitCoord -= dir;\r\n                else\r\n                    hitCoord += dir;\r\n        \r\n                info.color += ${textureMethod}(previousEffect, projectedCoord.xy).rgb;\r\n            }\r\n        \r\n            projectedCoord = matrix_viewProjection * vec4(hitCoord, 1.0) + matrix_viewProjection[3][3];\r\n            projectedCoord.xy /= projectedCoord.w;\r\n            projectedCoord.xy = 0.5 * projectedCoord.xy + vec2(0.5);\r\n         \r\n            // Merge colors\r\n            info.coords = vec4(projectedCoord.xy, sampledDepth, 1.0);\r\n            info.color += ${textureMethod}(previousEffect, projectedCoord.xy).rgb;\r\n            info.color /= float(SSRSMOOTHSTEPS + 1);\r\n            return info;\r\n        }\r\n        \r\n        \r\n        /**\r\n         * Tests the given world position (hitCoord) according to the given reflection vector (dir)\r\n         * until it finds a collision (means that depth is enough close to say "it\'s the pixel to sample!").\r\n         */\r\n        ReflectionInfo getReflectionInfo(vec3 dir, vec3 hitCoord)\r\n        {\r\n            ReflectionInfo info;\r\n            vec4 projectedCoord;\r\n            float sampledDepth;\r\n        \r\n            dir *= ssrStep;\r\n        \r\n            for(int i = 0; i < SSRSAMPLES; i++)\r\n            {\r\n                hitCoord += dir;\r\n\r\n                //https://github.com/playcanvas/engine/blob/master/src/graphics/program-lib/chunks/skybox.vert#L23\r\n\r\n                projectedCoord = matrix_viewProjection * vec4(hitCoord, 1.0);\r\n                projectedCoord.xyz /= projectedCoord.w;\r\n                projectedCoord.xy = 0.5 * projectedCoord.xy + 0.5;\r\n                \r\n                float sampleDepth = getScreenDepth( projectedCoord.xy );\r\n                float viewZ = getViewZ(sampleDepth, cameraNear, cameraFar);        \r\n                sampledDepth = getViewPositionFromDepth( projectedCoord.xy, sampleDepth, viewZ ).z;\r\n\r\n                float depth = sampledDepth - hitCoord.z;\r\n        \r\n                if(((depth - dir.z) < ssrThreshold) && depth <= 0.0)\r\n                {\r\n                    // #ifdef ENABLE_SMOOTH_REFLECTIONS\r\n                        //return smoothReflectionInfo(dir, hitCoord);\r\n                    // #else\r\n                        info.color = ${textureMethod}(previousEffect, projectedCoord.xy).rgb;\r\n                        info.coords = vec4(projectedCoord.xy, sampledDepth, 0.0);\r\n                        return info;\r\n                    //#endif\r\n                }\r\n            }\r\n            \r\n            info.color = ${textureMethod}(previousEffect, projectedCoord.xy).rgb;\r\n            info.coords = vec4(projectedCoord.xy, sampledDepth, 0.0);\r\n            return info;\r\n        }        \r\n\r\n        vec3 hash(vec3 a){\r\n            a = fract(a * 0.8);\r\n            a += dot(a, a.yxz + 19.19);\r\n            return fract((a.xxy + a.yxx) * a.zyx);\r\n        }        \r\n\r\n        void main(void) {\r\n  \r\n          float linearDepth = getLinearScreenDepth( vUv0 );\r\n          float depth = getScreenDepth( vUv0 );\r\n\r\n          // Intensity\r\n          vec3 albedo = ${textureMethod}(previousEffect, vUv0).rgb;\r\n          float spec = 1.0;\r\n          // float spec = ${textureMethod}(reflectivitySampler, vUv0).r;\r\n          // if (spec == 0.0) {\r\n          //     gl_FragColor = vec4(albedo, 1.0);\r\n          //     return;\r\n          // }          \r\n\r\n          // Position\r\n          float viewZ = getViewZ(depth, cameraNear, cameraFar);\r\n  \r\n          vec3 viewPosition = getViewPositionFromDepth( vUv0, depth, viewZ );\r\n          vec3 viewNormal = getViewNormal( viewPosition );\r\n          vec3 reflected = normalize(reflect(normalize(viewPosition), normalize(viewNormal)));\r\n  \r\n          //float roughness = 1.0 - texture2D(reflectivitySampler, vUV).a;\r\n          //vec3 jitt = mix(vec3(0.0), hash(viewPosition), roughness) * ssrRoughnessFactor;\r\n          vec3 jitt = mix(vec3(0.0), hash(viewPosition), 0.75) * ssrRoughnessFactor;\r\n          \r\n          //ReflectionInfo info = getReflectionInfo(jitt + reflected, viewPosition);\r\n          ReflectionInfo info = getReflectionInfo(reflected, viewPosition); // For debug: no roughness\r\n\r\n          vec2 dCoords = smoothstep(0.2, 0.6, abs(vec2(0.5, 0.5) - info.coords.xy));\r\n          float screenEdgefactor = clamp(1.0 - (dCoords.x + dCoords.y), 0.0, 1.0);\r\n\r\n          // Fresnel\r\n          vec3 F0 = vec3(0.04);\r\n          F0      = mix(F0, albedo, spec);\r\n          vec3 fresnel = fresnelSchlick(max(dot(normalize(viewNormal), normalize(viewPosition)), 0.0), F0);          \r\n\r\n          // Apply\r\n          float reflectionMultiplier = clamp(pow(spec * ssrStrength, ssrFalloff) * screenEdgefactor * reflected.z, 0.0, 0.9);\r\n          float albedoMultiplier = 1.0 - reflectionMultiplier;\r\n          vec3 SSR = info.color * fresnel;          \r\n\r\n          ${outputName} = vec4((albedo * albedoMultiplier) + (SSR * reflectionMultiplier), 1.0);\r\n        }    \r\n      `;\r\n        return shader;\r\n    }\r\n}\r\nErmisPassSSR.ID = "PassSSR";\r\nErmisPassSSR.ES = 3;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtZWZmZWN0LXNzci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZmZlY3RzL2VybWlzLWVmZmVjdC1zc3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1REFLOEI7QUFDOUIsbURBQStDO0FBRS9DLE1BQXFCLGNBQWUsU0FBUSwwQkFBVztJQW9HckQsWUFBWSxJQUFZLEVBQUUsUUFBNkI7UUFDckQsS0FBSyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV0QixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFlBQVksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRU0sV0FBVztRQUNoQixPQUFPLGNBQWMsQ0FBQyxjQUFjLENBQUM7SUFDdkMsQ0FBQzs7QUE3R0gsaUNBOEdDO0FBN0dRLGlCQUFFLEdBQVcsV0FBVyxDQUFDO0FBRXpCLDZCQUFjLEdBQW9CO0lBQ3ZDO1FBQ0UsSUFBSSxFQUFFLDhCQUFlLENBQUMsS0FBSztRQUMzQixNQUFNLEVBQUUsUUFBUTtRQUNoQixJQUFJLEVBQUUsWUFBWTtRQUNsQixRQUFRLEVBQUUsSUFBSTtRQUNkLE1BQU0sRUFBRSxJQUFJO1FBQ1osS0FBSyxFQUFFLFNBQVM7UUFDaEIsV0FBVyxFQUNULG1KQUFtSjtRQUNySixPQUFPLEVBQUUsRUFBRTtRQUNYLEdBQUcsRUFBRSxDQUFDO1FBQ04sR0FBRyxFQUFFLEdBQUc7UUFDUixTQUFTLEVBQUUsQ0FBQztRQUNaLFNBQVMsRUFBRSxDQUFDLEtBQWEsRUFBRSxFQUFFO1lBQzNCLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQixDQUFDO0tBQ0Y7SUFDRDtRQUNFLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUs7UUFDM0IsTUFBTSxFQUFFLFFBQVE7UUFDaEIs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\n\n//# sourceURL=webpack:///./src/effects/ermis-effect-ssr.ts?')
  },
  "./src/index.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst main_1 = __importDefault(__webpack_require__(/*! ./core/main */ "./src/core/main.ts"));\r\nconst ermis_effect_dof_1 = __importDefault(__webpack_require__(/*! ./effects/ermis-effect-dof */ "./src/effects/ermis-effect-dof.ts"));\r\nconst ermis_effect_godrays_1 = __importDefault(__webpack_require__(/*! ./effects/ermis-effect-godrays */ "./src/effects/ermis-effect-godrays.ts"));\r\nconst ermis_effect_sao_1 = __importDefault(__webpack_require__(/*! ./effects/ermis-effect-sao */ "./src/effects/ermis-effect-sao.ts"));\r\nconst ermis_effect_filmic_1 = __importDefault(__webpack_require__(/*! ./effects/ermis-effect-filmic */ "./src/effects/ermis-effect-filmic.ts"));\r\nconst ermis_effect_motionBlur_1 = __importDefault(__webpack_require__(/*! ./effects/ermis-effect-motionBlur */ "./src/effects/ermis-effect-motionBlur.ts"));\r\nconst ermis_effect_adaptiveEye_1 = __importDefault(__webpack_require__(/*! ./effects/ermis-effect-adaptiveEye */ "./src/effects/ermis-effect-adaptiveEye.ts"));\r\nconst ermis_effect_1 = __webpack_require__(/*! ./core/ermis-effect */ "./src/core/ermis-effect.ts");\r\nconst dofSettings = new ermis_effect_1.ErmisEffectSettings(ermis_effect_dof_1.default.ID, ermis_effect_dof_1.default.EffectUniforms);\r\nconst godraysSettings = new ermis_effect_1.ErmisEffectSettings(ermis_effect_godrays_1.default.ID, ermis_effect_godrays_1.default.EffectUniforms);\r\nconst saoSettings = new ermis_effect_1.ErmisEffectSettings(ermis_effect_sao_1.default.ID, ermis_effect_sao_1.default.EffectUniforms);\r\nconst filmicSettings = new ermis_effect_1.ErmisEffectSettings(ermis_effect_filmic_1.default.ID, ermis_effect_filmic_1.default.EffectUniforms);\r\nconst motionBlurSettings = new ermis_effect_1.ErmisEffectSettings(ermis_effect_motionBlur_1.default.ID, ermis_effect_motionBlur_1.default.EffectUniforms);\r\nconst adaptiveEyeSettings = new ermis_effect_1.ErmisEffectSettings(ermis_effect_adaptiveEye_1.default.ID, ermis_effect_adaptiveEye_1.default.EffectUniforms);\r\n// const ssrSettings = new ErmisEffectSettings(\r\n//   ErmisEffectSSR.ID,\r\n//   ErmisEffectSSR.EffectUniforms\r\n// );\r\nnew main_1.default([\r\n    dofSettings,\r\n    godraysSettings,\r\n    saoSettings,\r\n    filmicSettings,\r\n    motionBlurSettings,\r\n    adaptiveEyeSettings\r\n    //ssrSettings\r\n]);\r\nconsole.log("Loaded PlayingInCanvas library, Ermis Special Effects v2.4.4");\r\n// https://github.com/vanruesc/postprocessing\r\n// https://research.nvidia.com/sites/default/files/pubs/2012-06_Scalable-Ambient-Obscurance/McGuire12SAO.pdf\r\n// https://www.enkisoftware.com/devlogpost-20150131-1-Normal-generation-in-the-pixel-shader\r\n// http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/\r\n// https://www.shadertoy.com/view/4dyXWy\r\n// http://tuxedolabs.blogspot.com/2018/05/bokeh-depth-of-field-in-single-pass.html\r\n// https://community.khronos.org/t/automatic-exposure-control/54486/5\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx1REFBK0I7QUFDL0Isa0ZBQXdEO0FBQ3hELDBGQUFnRTtBQUNoRSxrRkFBd0Q7QUFDeEQsd0ZBQThEO0FBQzlELGdHQUFzRTtBQUN0RSxrR0FBd0U7QUFFeEUsc0RBQTBEO0FBRTFELE1BQU0sV0FBVyxHQUFHLElBQUksa0NBQW1CLENBQ3pDLDBCQUFjLENBQUMsRUFBRSxFQUNqQiwwQkFBYyxDQUFDLGNBQWMsQ0FDOUIsQ0FBQztBQUNGLE1BQU0sZUFBZSxHQUFHLElBQUksa0NBQW1CLENBQzdDLDhCQUFrQixDQUFDLEVBQUUsRUFDckIsOEJBQWtCLENBQUMsY0FBYyxDQUNsQyxDQUFDO0FBQ0YsTUFBTSxXQUFXLEdBQUcsSUFBSSxrQ0FBbUIsQ0FDekMsMEJBQWMsQ0FBQyxFQUFFLEVBQ2pCLDBCQUFjLENBQUMsY0FBYyxDQUM5QixDQUFDO0FBQ0YsTUFBTSxjQUFjLEdBQUcsSUFBSSxrQ0FBbUIsQ0FDNUMsNkJBQWlCLENBQUMsRUFBRSxFQUNwQiw2QkFBaUIsQ0FBQyxjQUFjLENBQ2pDLENBQUM7QUFDRixNQUFNLGtCQUFrQixHQUFHLElBQUksa0NBQW1CLENBQ2hELGlDQUFxQixDQUFDLEVBQUUsRUFDeEIsaUNBQXFCLENBQUMsY0FBYyxDQUNyQyxDQUFDO0FBQ0YsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLGtDQUFtQixDQUNqRCxrQ0FBc0IsQ0FBQyxFQUFFLEVBQ3pCLGtDQUFzQixDQUFDLGNBQWMsQ0FDdEMsQ0FBQztBQUNGLCtDQUErQztBQUMvQyx1QkFBdUI7QUFDdkIsa0NBQWtDO0FBQ2xDLEtBQUs7QUFFTCxJQUFJLGNBQUksQ0FBQztJQUNQLFdBQVc7SUFDWCxlQUFlO0lBQ2YsV0FBVztJQUNYLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGFBQWE7Q0FDZCxDQUFDLENBQUM7QUFFSCxPQUFPLENBQUMsR0FBRyxDQUFDLDhEQUE4RCxDQUFDLENBQUM7QUFFNUUsNkNBQTZDO0FBRTdDLDRHQUE0RztBQUU1RywyRkFBMkY7QUFFM0YsNEVBQTRFO0FBRTVFLHdDQUF3QztBQUV4QyxrRkFBa0Y7QUFFbEYscUVBQXFFIn0=\n\n//# sourceURL=webpack:///./src/index.ts?')
  },
  "./src/utilities/ermis-common.ts": function(module, exports, __webpack_require__) {
    "use strict";
    eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass ErmisCommon {\r\n    constructor() {\r\n    }\r\n}\r\nexports.default = ErmisCommon;\r\nErmisCommon.fragmentMethods = `\r\n  \r\n    #define PI 3.14159265359\r\n    #define PI2 6.28318530718      \r\n    #define EPSILON 1e-6\r\n\r\n    uniform sampler2D uDepthMap;\r\n\r\n    uniform float cameraNear;\r\n    uniform float cameraFar;\r\n    uniform float time;\r\n    uniform float delta;\r\n\r\n    uniform mat4 matrix_projection;\r\n    uniform mat4 matrix_viewProjection;\r\n    uniform mat4 matrix_viewProjectionPrevious;\r\n    uniform mat4 matrix_viewProjectionInverse;\r\n    uniform mat4 matrix_viewProjectionInversePrevious;\r\n    uniform vec2 resolution;\r\n    uniform float mipLevel;\r\n\r\n    #ifndef SCREENSIZE\r\n    #define SCREENSIZE\r\n    uniform vec4 uScreenSize;\r\n    #endif\r\n    \r\n    #ifndef VIEWMATRIX\r\n    #define VIEWMATRIX\r\n    uniform mat4 matrix_view;\r\n    #endif\r\n    \r\n    #ifndef CAMERAPLANES\r\n    #define CAMERAPLANES\r\n    uniform vec4 camera_params; // 1 / camera_far,      camera_far,     (1 - f / n) / 2,        (1 + f / n) / 2\r\n    #endif\r\n\r\n    float pow2( float x ) { return x*x; }\r\n\r\n    highp float rand( vec2 uv ) {\r\n        const highp float a = 12.9898, b = 78.233, c = 43758.5453;\r\n        highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\r\n        return fract(sin(sn) * c);\r\n    }\r\n    \r\n    #ifdef GL2\r\n        float linearizeDepth(float z) {\r\n            z = z * 2.0 - 1.0;\r\n            return 1.0 / (camera_params.z * z + camera_params.w);\r\n        }\r\n    #else\r\n        #ifndef UNPACKFLOAT\r\n        #define UNPACKFLOAT\r\n        float unpackFloat(vec4 rgbaDepth) {\r\n            const vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\r\n            return dot(rgbaDepth, bitShift);\r\n        }\r\n        #endif\r\n    #endif\r\n    \r\n    // Retrieves rendered linear camera depth by UV\r\n    float getLinearScreenDepth(vec2 uv) {\r\n      #ifdef GL2\r\n          #ifdef ES3\r\n              return linearizeDepth(texture(uDepthMap, uv).r) * camera_params.y * 0.01;\r\n          #else\r\n              return linearizeDepth(texture2D(uDepthMap, uv).r) * camera_params.y * 0.01;\r\n          #endif          \r\n      #else\r\n          return unpackFloat(texture2D(uDepthMap, uv)) * camera_params.y * 0.01;\r\n      #endif\r\n    }   \r\n    \r\n    float getScreenDepth(vec2 uv) {\r\n      #ifdef GL2\r\n          #ifdef ES3\r\n              return texture(uDepthMap, uv).r;\r\n          #else\r\n              return texture2D(uDepthMap, uv).r;\r\n          #endif  \r\n      #else\r\n        return unpackFloat(texture2D(uDepthMap, uv));\r\n      #endif\r\n    }      \r\n    \r\n    float getViewZ( const in float depth, const in float near, const in float far ) {\r\n        return ( near * far ) / ( ( far - near ) * depth - far );\r\n    }   \r\n    \r\n    vec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ, const in mat4 projection, const in mat4 projectionInverse ) {    \r\n        float clipW = projection[2][3] * viewZ + projection[3][3];\r\n        vec4 clipPosition = vec4( ( vec3( screenPosition * 2.0 - 1.0, depth ) - 0.5 ) * 2.0, 1.0 );\r\n        clipPosition *= clipW;\r\n    \r\n        return ( projectionInverse * clipPosition ).xyz;\r\n    }       \r\n  `;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJtaXMtY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxpdGllcy9lcm1pcy1jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFxQixXQUFXO0lBa0c5QjtJQUFlLENBQUM7O0FBbEdsQiw4QkFtR0M7QUFsR1EsMkJBQWUsR0FBVzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0ErRmhDLENBQUMifQ==\n\n//# sourceURL=webpack:///./src/utilities/ermis-common.ts?')
  }
});
